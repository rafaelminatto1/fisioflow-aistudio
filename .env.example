# =============================================================================
# FISIOFLOW - CONFIGURAÇÃO DE AMBIENTE
# =============================================================================
# Copie este arquivo para .env.local e configure as variáveis necessárias

# =============================================================================
# NEON DATABASE CONFIGURATION
# =============================================================================
# Obtenha essas informações no Neon Console: https://console.neon.tech

# URL de conexão principal (com pooling)
DATABASE_URL="postgresql://username:password@ep-xxx.us-east-1.aws.neon.tech/neondb?sslmode=require&pgbouncer=true"

# URL de conexão direta (para migrações)
DIRECT_URL="postgresql://username:password@ep-xxx.us-east-1.aws.neon.tech/neondb?sslmode=require"

# Configurações do projeto Neon
NEON_PROJECT_ID="your-project-id"
NEON_API_KEY="your-api-key"
NEON_BRANCH_ID="main"
NEON_ENDPOINT_ID="your-endpoint-id"

# =============================================================================
# AI PROVIDER API KEYS (OPCIONAL)
# =============================================================================
# Configure apenas os provedores que você pretende usar

# OpenAI (ChatGPT)
OPENAI_API_KEY="sk-your-openai-api-key-here"

# Anthropic (Claude)
ANTHROPIC_API_KEY="sk-ant-your-anthropic-api-key-here"

# Google (Gemini)
GEMINI_API_KEY="your-gemini-api-key-here"

# =============================================================================
# MCP (MODEL CONTEXT PROTOCOL) CONFIGURATION
# =============================================================================
MCP_ENABLED=true
MCP_CONFIG_PATH="./mcp.config.json"

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================
# Configuração para backups automáticos

# AWS S3 para armazenamento de backups
AWS_ACCESS_KEY_ID="your-aws-access-key"
AWS_SECRET_ACCESS_KEY="your-aws-secret-key"
AWS_REGION="us-east-1"
S3_BUCKET_NAME="fisioflow-backups"

# Chave de criptografia para backups (32 caracteres)
BACKUP_ENCRYPTION_KEY="your-32-character-encryption-key-here"

# Configurações de retenção
BACKUP_RETENTION_DAYS=30
BACKUP_MAX_SIZE_GB=10

# =============================================================================
# MONITORING & ALERTS
# =============================================================================
# Configuração para monitoramento e alertas

# Slack para notificações
SLACK_WEBHOOK_URL="https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
SLACK_CHANNEL="#fisioflow-alerts"

# Webhook genérico para alertas
WEBHOOK_URL="https://your-webhook-service.com/alerts"

# Email para alertas críticos
ALERT_EMAIL="admin@your-domain.com"

# =============================================================================
# AUTO-SCALING CONFIGURATION
# =============================================================================
# Configuração para auto-scaling automático

# Limites de escalonamento
SCALE_UP_CPU_THRESHOLD=75
SCALE_UP_CONNECTIONS_THRESHOLD=80
SCALE_UP_RESPONSE_TIME_THRESHOLD=1000

# Limites de redução
SCALE_DOWN_CPU_THRESHOLD=30
SCALE_DOWN_CONNECTIONS_THRESHOLD=20
SCALE_DOWN_RESPONSE_TIME_THRESHOLD=200

# Unidades de computação
MIN_COMPUTE_UNITS=0.25
MAX_COMPUTE_UNITS=4
SCALE_INCREMENT=0.25

# Períodos de cooldown (em segundos)
SCALE_UP_COOLDOWN=300
SCALE_DOWN_COOLDOWN=600

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# Configurações de segurança

# JWT Secret para autenticação
JWT_SECRET="your-super-secret-jwt-key-here"

# Chave de criptografia para dados sensíveis
ENCRYPTION_KEY="your-encryption-key-for-sensitive-data"

# CORS Origins permitidas
ALLOWED_ORIGINS="http://localhost:3000,https://your-domain.com"

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
# Configurações gerais da aplicação

# Ambiente de execução
NODE_ENV="development"

# Porta da aplicação
PORT=3000

# URL base da aplicação
NEXT_PUBLIC_APP_URL="http://localhost:3000"

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Configuração de logs

# Nível de log (error, warn, info, debug)
LOG_LEVEL="info"

# Diretório de logs
LOG_DIR="./logs"

# Rotação de logs (em dias)
LOG_RETENTION_DAYS=7

# =============================================================================
# PERFORMANCE CONFIGURATION
# =============================================================================
# Configurações de performance

# Pool de conexões do banco
DB_POOL_SIZE=10
DB_POOL_TIMEOUT=30000
DB_POOL_IDLE_TIMEOUT=600000

# Cache Redis (opcional)
# REDIS_URL="redis://localhost:6379"
# REDIS_PASSWORD="your-redis-password"

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================
# Configurações apenas para desenvolvimento

# Habilitar debug
DEBUG="fisioflow:*"

# Habilitar hot reload
WATCH_FILES=true

# Habilitar logs detalhados do Prisma
PRISMA_DEBUG=false

# =============================================================================
# EMERGENCY CONFIGURATION
# =============================================================================
# Configurações para situações de emergência

# Telefone para emergências (formato: +5511999999999)
EMERGENCY_PHONE="+5511999999999"

# API para chamadas de emergência
EMERGENCY_PHONE_API="https://api.emergency-calls.com/call"

# Sistema de tickets
TICKET_SYSTEM_API="https://your-ticket-system.com/api"
TICKET_API_KEY="your-ticket-api-key"

# =============================================================================
# COMPLIANCE CONFIGURATION
# =============================================================================
# Configurações para conformidade (LGPD, etc.)

# Contato do DPO (Data Protection Officer)
DPO_EMAIL="dpo@your-domain.com"

# Período de retenção de dados (em dias)
DATA_RETENTION_DAYS=2555  # 7 anos

# Habilitar auditoria de acesso
ENABLE_AUDIT_LOG=true

# =============================================================================
# RAILWAY DEPLOYMENT CONFIGURATION
# =============================================================================
# Configurações específicas para deployment no Railway

# Railway Project Configuration
RAILWAY_PROJECT_ID="your-railway-project-id"
RAILWAY_ENVIRONMENT="production"
RAILWAY_SERVICE_NAME="fisioflow-api"

# Railway Database Configuration
RAILWAY_DATABASE_URL="${{Neon.DATABASE_URL}}"
RAILWAY_DIRECT_URL="${{Neon.DIRECT_URL}}"

# Railway Networking
RAILWAY_PUBLIC_DOMAIN="fisioflow.railway.app"
RAILWAY_PRIVATE_DOMAIN="fisioflow.railway.internal"

# Railway Resource Limits
RAILWAY_CPU_LIMIT="1000m"  # 1 vCPU
RAILWAY_MEMORY_LIMIT="1Gi"  # 1GB RAM
RAILWAY_DISK_LIMIT="2Gi"   # 2GB Disk

# Railway Auto-scaling
RAILWAY_MIN_REPLICAS=1
RAILWAY_MAX_REPLICAS=5
RAILWAY_TARGET_CPU=70
RAILWAY_TARGET_MEMORY=80

# Railway Health Checks
RAILWAY_HEALTH_CHECK_PATH="/api/health"
RAILWAY_HEALTH_CHECK_TIMEOUT=120
RAILWAY_HEALTH_CHECK_INTERVAL=30
RAILWAY_HEALTH_CHECK_RETRIES=5

# Railway Deployment
RAILWAY_BUILD_COMMAND="npm run build"
RAILWAY_START_COMMAND="npm start"
RAILWAY_RESTART_POLICY="ON_FAILURE"
RAILWAY_MAX_RETRIES=10

# Railway Security
RAILWAY_HTTPS_ONLY=true
RAILWAY_CORS_ENABLED=true
RAILWAY_RATE_LIMIT_ENABLED=true
RAILWAY_CSRF_PROTECTION=true

# Railway Monitoring
RAILWAY_METRICS_ENABLED=true
RAILWAY_LOGS_RETENTION="7d"
RAILWAY_STRUCTURED_LOGGING=true
RAILWAY_LOG_FORMAT="json"

# Railway Backup Integration
RAILWAY_BACKUP_ENABLED=true
RAILWAY_BACKUP_SCHEDULE="0 2 * * *"  # Daily at 2 AM
RAILWAY_BACKUP_RETENTION=30

# Railway Notifications
RAILWAY_WEBHOOK_URL="https://your-webhook.com/railway"
RAILWAY_SLACK_WEBHOOK="${{SLACK_WEBHOOK_URL}}"
RAILWAY_ALERT_EMAIL="${{ALERT_EMAIL}}"

# =============================================================================
# FEATURE FLAGS
# =============================================================================
# Flags para habilitar/desabilitar funcionalidades

# Habilitar auto-scaling
ENABLE_AUTO_SCALING=true

# Habilitar backup automático
ENABLE_AUTO_BACKUP=true

# Habilitar monitoramento avançado
ENABLE_ADVANCED_MONITORING=true

# Habilitar alertas proativos
ENABLE_PROACTIVE_ALERTS=true

# Habilitar machine learning para predições
ENABLE_ML_PREDICTIONS=true

# Railway specific features
ENABLE_RAILWAY_INTEGRATION=true
ENABLE_RAILWAY_MONITORING=true
ENABLE_RAILWAY_AUTO_DEPLOY=true

# =============================================================================
# INSTRUÇÕES DE CONFIGURAÇÃO
# =============================================================================
# 
# DESENVOLVIMENTO LOCAL:
# ----------------------
# 1. Copie este arquivo para .env.local:
#    cp .env.example .env.local
# 
# 2. Configure as variáveis obrigatórias:
#    - DATABASE_URL e DIRECT_URL (Neon DB)
#    - NEON_PROJECT_ID e NEON_API_KEY
#    - JWT_SECRET (gere uma chave segura)
# 
# 3. Configure as variáveis opcionais conforme necessário:
#    - Chaves de API para IA (se usar)
#    - Configurações de backup (se usar S3)
#    - Webhooks para alertas
# 
# 4. Execute as migrações:
#    npx prisma migrate dev
# 
# 5. Inicie a aplicação:
#    npm run dev
# 
# DEPLOYMENT NO RAILWAY:
# ----------------------
# 1. Conecte seu repositório GitHub ao Railway
# 
# 2. Configure as variáveis de ambiente no Railway Dashboard:
#    - Todas as variáveis DATABASE_* (Neon DB)
#    - JWT_SECRET e ENCRYPTION_KEY
#    - Chaves de API necessárias
#    - Configurações de backup (AWS S3)
#    - Webhooks para alertas
# 
# 3. O Railway usará automaticamente:
#    - railway.json para configurações de build/deploy
#    - railway.toml para configurações avançadas
#    - Dockerfile para containerização
# 
# 4. Deploy automático será acionado em push para main
# 
# 5. Monitore o deployment:
#    - Logs: Railway Dashboard > Service > Logs
#    - Métricas: /api/neon/metrics
#    - Health: /api/health
# 
# COMANDOS ÚTEIS:
# ---------------
# - Deploy manual: railway up
# - Logs em tempo real: railway logs
# - Conectar ao banco: railway connect
# - Executar migrações: railway run npx prisma migrate deploy
# 
# Para mais informações, consulte:
# - README.md
# - docs/railway-deployment.md
# - docs/neon-configuration.md
# =============================================================================