"use strict";(()=>{var e={};e.id=368,e.ids=[368],e.modules={53524:e=>{e.exports=require("@prisma/client")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},61212:e=>{e.exports=require("async_hooks")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},92048:e=>{e.exports=require("fs")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},98216:e=>{e.exports=require("net")},19801:e=>{e.exports=require("os")},55315:e=>{e.exports=require("path")},76162:e=>{e.exports=require("stream")},74026:e=>{e.exports=require("string_decoder")},82452:e=>{e.exports=require("tls")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},13211:(e,t,a)=>{a.r(t),a.d(t,{originalPathname:()=>$,patchFetch:()=>b,requestAsyncStorage:()=>S,routeModule:()=>I,serverHooks:()=>O,staticGenerationAsyncStorage:()=>N});var r={};a.r(r),a.d(r,{GET:()=>v});var n=a(49303),s=a(88716),i=a(60670),o=a(87070),c=a(90455),l=a(49237),d=a(73077),m=a(16836),u=a(67754),p=a(11258);let h={DEFAULT_TIMEOUT:5e3,CACHE_TTL:{SHORT:60,MEDIUM:300,LONG:1800,VERY_LONG:3600}},g={minimal:{id:!0,name:!0,email:!0,role:!0}};async function y(e,t){let a=Date.now();try{let r=await t(),n=Date.now()-a;return n>h.DEFAULT_TIMEOUT&&console.warn(`🐌 Slow query detected: ${e} took ${n}ms`),r}catch(r){let t=Date.now()-a;throw console.error(`❌ Query failed: ${e} after ${t}ms`,r),r}}({minimal:{id:!0,name:!0,phone:!0,status:!0},basic:{id:!0,name:!0,email:!0,phone:!0,dateOfBirth:!0,status:!0,createdAt:!0,userId:!0},withUser:{id:!0,name:!0,email:!0,phone:!0,dateOfBirth:!0,status:!0,createdAt:!0,user:{select:g.minimal}},full:{id:!0,name:!0,email:!0,phone:!0,dateOfBirth:!0,address:!0,emergencyContact:!0,medicalHistory:!0,status:!0,createdAt:!0,updatedAt:!0,userId:!0}}).minimal,g.minimal;class w{set(e,t,a){let r=Date.now()+1e3*a;this.cache.set(e,{data:t,expires:r})}get(e){let t=this.cache.get(e);return t?Date.now()>t.expires?(this.cache.delete(e),null):t.data:null}clear(){this.cache.clear()}size(){return this.cache.size}constructor(){this.cache=new Map}}let f=new w;async function A(e,t,a=h.CACHE_TTL.MEDIUM){let r=f.get(e);if(r)return r;let n=await t();return f.set(e,n,a),n}class x{constructor(){let e=process.env.GOOGLE_AI_API_KEY;if(!e){d.aw.warn("Google AI API key not configured");return}this.genAI=new p.$D(e),this.model=this.genAI.getGenerativeModel({model:"gemini-1.5-flash"})}async generatePatientInsights(e){return A(`patient_insights_${e}`,async()=>{try{let t=await this.gatherPatientData(e);if(!t)return null;let a=await this.analyzePatientData(t);return await this.storePatientInsights(e,a),u.B1.recordBusinessEvent("ai_patient_insight_generated",{patientId:e,riskLevel:a.riskLevel}),a}catch(t){return d.aw.error("Failed to generate patient insights",{patientId:e,error:t.message}),null}},1800)}async generateTreatmentRecommendations(e){return A(`treatment_recommendations_${e}`,async()=>{try{let t=await this.gatherPatientData(e);if(!t)return[];let a=await this.generateRecommendationsWithAI(t);return u.B1.recordBusinessEvent("ai_treatment_recommendations_generated",{patientId:e,recommendationCount:a.length}),a}catch(t){return d.aw.error("Failed to generate treatment recommendations",{patientId:e,error:t.message}),[]}},3600)}async generateClinicInsights(e){return A(`clinic_insights_${e}`,async()=>{try{let t=await this.gatherClinicData(e),a=await this.analyzeClinicData(t);return u.B1.recordBusinessEvent("ai_clinic_insights_generated",{therapistId:e,alertCount:a.alerts.length}),a}catch(t){return d.aw.error("Failed to generate clinic insights",{therapistId:e,error:t.message}),null}},7200)}async gatherPatientData(e){return await l._B.patient.findUnique({where:{id:e},include:{appointments:{orderBy:{startTime:"desc"},take:20,include:{therapist:{select:{name:!0}}}},painPoints:{orderBy:{createdAt:"desc"},take:10},metricResults:{orderBy:{measuredAt:"desc"},take:20},soapNotes:{orderBy:{createdAt:"desc"},take:10}}})}async gatherClinicData(e){let[t,a,r]=await Promise.all([l._B.patient.findMany({where:{appointments:{some:{therapistId:e}}},include:{appointments:{where:{therapistId:e},orderBy:{startTime:"desc"}},painPoints:!0,metricResults:!0}}),l._B.appointment.findMany({where:{therapistId:e,startTime:{gte:new Date(Date.now()-7776e6)}},include:{patient:{select:{name:!0,status:!0}}}}),l._B.painPoint.findMany({where:{patient:{appointments:{some:{therapistId:e}}}},include:{patient:{select:{name:!0}}}})]);return{patients:t,appointments:a,painPoints:r}}async analyzePatientData(e){return(0,m.M3)("google_ai","patient_analysis",async()=>{let t=this.buildPatientAnalysisPrompt(e),a=(await this.model.generateContent(t)).response.text(),r=this.parsePatientAnalysis(a,e);return{patientId:e.id,patientName:e.name,riskLevel:r.riskLevel,insights:r.insights,predictions:r.predictions,generatedAt:new Date}})}async generateRecommendationsWithAI(e){return(0,m.M3)("google_ai","treatment_recommendations",async()=>{let t=this.buildRecommendationPrompt(e),a=(await this.model.generateContent(t)).response.text();return this.parseRecommendations(a,e.id)})}async analyzeClinicData(e){return(0,m.M3)("google_ai","clinic_analysis",async()=>{let t=this.buildClinicAnalysisPrompt(e),a=(await this.model.generateContent(t)).response.text();return this.parseClinicAnalysis(a,e)})}buildPatientAnalysisPrompt(e){let t=e.appointments.slice(0,10),a=e.painPoints.slice(0,5),r=e.metricResults.slice(0,10);return`
Voc\xea \xe9 um especialista em fisioterapia com IA avan\xe7ada. Analise os dados do paciente abaixo e forne\xe7a insights detalhados.

DADOS DO PACIENTE:
Nome: ${e.name}
Status: ${e.status}
Data de nascimento: ${e.dateOfBirth}
Hist\xf3rico m\xe9dico: ${e.medicalHistory||"N\xe3o informado"}

CONSULTAS RECENTES (${t.length}):
${t.map(e=>`- ${e.startTime}: ${e.type} (Status: ${e.status}) - Terapeuta: ${e.therapist?.name}`).join("\n")}

PONTOS DE DOR RECENTES (${a.length}):
${a.map(e=>`- ${e.bodyPart}: ${e.type} (Intensidade: ${e.intensity}/10) - ${e.description}`).join("\n")}

M\xc9TRICAS RECENTES (${r.length}):
${r.map(e=>`- ${e.metricName}: ${e.value} ${e.unit} (${e.measuredAt})`).join("\n")}

Por favor, forne\xe7a uma an\xe1lise estruturada incluindo:

1. N\xcdVEL DE RISCO (low/medium/high/critical) e justificativa
2. PROGRESSO DA RECUPERA\xc7\xc3O (0-100%) e tend\xeancia (improving/stable/declining)
3. AN\xc1LISE DE FREQU\xcaNCIA (taxa de comparecimento e padr\xe3o)
4. AN\xc1LISE DA DOR (tend\xeancia e intensidade m\xe9dia)
5. N\xcdVEL DE ENGAJAMENTO e fatores
6. PREDI\xc7\xd5ES (probabilidade de alta e fatores de risco)
7. A\xc7\xd5ES RECOMENDADAS

Seja espec\xedfico e baseie-se em evid\xeancias cl\xednicas.
    `}buildRecommendationPrompt(e){return`
Como especialista em fisioterapia, gere recomenda\xe7\xf5es espec\xedficas para este paciente:

PACIENTE: ${e.name}
CONDI\xc7\xc3O: ${e.medicalHistory||"A definir"}
STATUS: ${e.status}

DADOS CL\xcdNICOS:
${e.appointments.slice(0,5).map(e=>`- Consulta ${e.type}: ${e.status} (Notas: ${e.notes||"Sem notas"})`).join("\n")}

${e.painPoints.slice(0,3).map(e=>`- Dor em ${e.bodyPart}: ${e.intensity}/10`).join("\n")}

Gere 3-5 recomenda\xe7\xf5es espec\xedficas com:
- Categoria (exercise/frequency/duration/technique/referral)
- Prioridade (high/medium/low)
- Recomenda\xe7\xe3o detalhada
- Justificativa baseada em evid\xeancia
- Resultado esperado
- Passos de implementa\xe7\xe3o
- N\xedvel de confian\xe7a (0-100%)

Foque em abordagens baseadas em evid\xeancias cient\xedficas.
    `}buildClinicAnalysisPrompt(e){let{patients:t,appointments:a}=e;return`
Analise os dados da cl\xednica de fisioterapia e forne\xe7a insights estrat\xe9gicos:

DADOS GERAIS:
- Total de pacientes: ${t.length}
- Consultas nos \xfaltimos 90 dias: ${a.length}
- Pacientes ativos: ${t.filter(e=>"Active"===e.status).length}

PADR\xd5ES DE CONSULTAS:
${this.getAppointmentPatterns(a)}

AN\xc1LISE DE CONDI\xc7\xd5ES:
${this.getConditionAnalysis(t)}

Forne\xe7a:
1. VIS\xc3O GERAL (m\xe9tricas principais)
2. PADR\xd5ES IDENTIFICADOS
3. PERFORMANCE DO TRATAMENTO
4. ALERTAS CR\xcdTICOS
5. RECOMENDA\xc7\xd5ES (operacionais, cl\xednicas, comerciais)

Seja estrat\xe9gico e orientado por dados.
    `}getAppointmentPatterns(e){return Object.entries(e.reduce((e,t)=>{let a=new Date(t.startTime).toLocaleDateString("pt-BR",{weekday:"long"});return e[a]=(e[a]||0)+1,e},{})).map(([e,t])=>`${e}: ${t} consultas`).join("\n")}getConditionAnalysis(e){let t={};return e.forEach(e=>{e.medicalHistory&&(t[e.medicalHistory]=(t[e.medicalHistory]||0)+1)}),Object.entries(t).sort(([,e],[,t])=>t-e).slice(0,5).map(([e,t])=>`${e}: ${t} pacientes`).join("\n")}parsePatientAnalysis(e,t){let a=this.extractRiskLevel(e),r=this.extractProgress(e);return{riskLevel:a,insights:{recovery:{progress:r,trend:r>70?"improving":r>40?"stable":"declining",analysis:e.slice(0,200)+"..."},attendance:{rate:this.calculateAttendanceRate(t.appointments),pattern:"consistent",analysis:"An\xe1lise baseada nos dados de comparecimento"},pain:{trend:this.analyzePainTrend(t.painPoints),avgIntensity:this.calculateAvgPainIntensity(t.painPoints),analysis:"An\xe1lise da evolu\xe7\xe3o da dor baseada nos registros"},engagement:{level:"medium",factors:["Comparecimento regular","Relat\xf3rios de dor consistentes"],recommendations:["Aumentar frequ\xeancia de exerc\xedcios","Melhorar comunica\xe7\xe3o"]}},predictions:{dischargeProbability:Math.min(r+20,100),riskFactors:this.identifyRiskFactors(e),recommendedActions:this.extractRecommendedActions(e)}}}parseRecommendations(e,t){let a=[];return a.push({patientId:t,category:"exercise",priority:"high",recommendation:"Aumentar frequ\xeancia de exerc\xedcios de fortalecimento",reasoning:"Baseado na an\xe1lise dos dados de recupera\xe7\xe3o",expectedOutcome:"Melhora de 20-30% na for\xe7a muscular em 4 semanas",implementationSteps:["Avaliar capacidade atual","Definir programa progressivo","Monitorar evolu\xe7\xe3o semanalmente"],confidence:85}),a}parseClinicAnalysis(e,t){let{patients:a,appointments:r}=t;return{overview:{totalPatients:a.length,activePatients:a.filter(e=>"Active"===e.status).length,completionRate:75,avgSessionsPerPatient:r.length/a.length},patterns:{mostCommonConditions:[],busyDays:[],seasonalTrends:[]},performance:{therapistEfficiency:[],treatmentSuccess:[]},alerts:[{type:"capacity_warning",severity:"medium",message:"Capacidade pr\xf3xima do limite nos hor\xe1rios de pico",actionRequired:"Considerar expandir hor\xe1rios de atendimento"}],recommendations:{operational:["Otimizar agendamentos para melhor distribui\xe7\xe3o"],clinical:["Implementar protocolos padronizados"],business:["Analisar oportunidades de expans\xe3o"]}}}extractRiskLevel(e){let t=e.toLowerCase();return t.includes("critical")||t.includes("cr\xedtico")?"critical":t.includes("high")||t.includes("alto")?"high":t.includes("medium")||t.includes("m\xe9dio")?"medium":"low"}extractProgress(e){let t=e.match(/(\d+)%/);return t?parseInt(t[1]):50}calculateAttendanceRate(e){let t=e.filter(e=>"Conclu\xeddo"===e.status).length;return e.length>0?Math.round(t/e.length*100):0}analyzePainTrend(e){if(e.length<2)return"stable";let t=e.slice(0,3).reduce((e,t)=>e+t.intensity,0)/3,a=e.slice(3,6).reduce((e,t)=>e+t.intensity,0)/3;return t<a-1?"improving":t>a+1?"worsening":"stable"}calculateAvgPainIntensity(e){return 0===e.length?0:Math.round(e.reduce((e,t)=>e+t.intensity,0)/e.length)}identifyRiskFactors(e){let t=[];return e.toLowerCase().includes("irregular")&&t.push("Comparecimento irregular"),e.toLowerCase().includes("pain")&&t.push("Dor persistente"),t}extractRecommendedActions(e){return["Acompanhar evolu\xe7\xe3o semanalmente","Ajustar plano de tratamento conforme necess\xe1rio","Manter comunica\xe7\xe3o regular com paciente"]}async storePatientInsights(e,t){try{await l._B.$executeRaw`
        INSERT INTO "PatientInsights" ("patientId", "riskLevel", "insights", "generatedAt")
        VALUES (${e}, ${t.riskLevel}, ${JSON.stringify(t.insights)}::jsonb, ${t.generatedAt})
        ON CONFLICT ("patientId") 
        DO UPDATE SET 
          "riskLevel" = EXCLUDED."riskLevel",
          "insights" = EXCLUDED."insights",
          "generatedAt" = EXCLUDED."generatedAt";
      `}catch(t){d.aw.error("Failed to store patient insights",{patientId:e,error:t})}}async healthCheck(){try{if(!process.env.GOOGLE_AI_API_KEY)return{status:"unhealthy",error:"Google AI API key not configured"};let e=await this.model.generateContent("Hello, this is a health check test.");if(e&&e.response)return{status:"healthy"};return{status:"unhealthy",error:"Invalid AI response"}}catch(e){return{status:"unhealthy",error:e.message}}}}let E=new x;async function v(e){return y("advanced_analytics_fetch",async()=>{try{let t=await (0,c.I8)();if(!t?.user)return o.NextResponse.json({error:"Unauthorized"},{status:401});let{searchParams:a}=new URL(e.url),r=a.get("userId")||t.user.id,n=a.get("range")||"30d",s=new Date,i="7d"===n?7:"30d"===n?30:"90d"===n?90:365,l=new Date(s.getTime()-864e5*i),[m,p,h,g,y]=await Promise.all([D(r,l),C(r),T(r,l),R(r),P(r)]),w={overview:m,patientInsights:p,performance:h,alerts:g,predictions:y,generatedAt:new Date().toISOString(),timeRange:n};return u.B1.recordAPICall("analytics","GET",200),d.aw.info("Advanced analytics dashboard generated",{userId:r,range:n,patientCount:p.length,alertCount:g.length}),o.NextResponse.json(w)}catch(e){return d.aw.error("Failed to generate advanced analytics",{error:e.message,stack:e.stack}),u.B1.recordAPICall("analytics","GET",500),o.NextResponse.json({error:"Failed to generate analytics"},{status:500})}})}async function D(e,t){let[a,r,n,s,i]=await Promise.all([l._B.patient.count({where:{appointments:{some:{therapistId:e}}}}),l._B.patient.count({where:{status:"Active",appointments:{some:{therapistId:e}}}}),l._B.appointment.count({where:{therapistId:e,status:"Realizado",startTime:{gte:t}}}),l._B.appointment.count({where:{therapistId:e,startTime:{gte:t}}}),l._B.patient.count({where:{appointments:{some:{therapistId:e}},createdAt:{gte:new Date(Date.now()-5184e6),lte:new Date(Date.now()-2592e6)}}})]),o=await l._B.appointment.groupBy({by:["patientId"],where:{therapistId:e,startTime:{gte:t}},_count:{id:!0}});return{totalPatients:a,activePatients:r,completionRate:s>0?Math.round(n/s*100):0,avgSessionsPerPatient:Math.round(10*(o.length>0?o.reduce((e,t)=>e+t._count.id,0)/o.length:0))/10,monthlyGrowth:i>0?Math.round((r-i)/i*100):0}}async function C(e){let t=await l._B.patient.findMany({where:{appointments:{some:{therapistId:e}}},include:{appointments:{where:{therapistId:e},orderBy:{startTime:"desc"},take:10},painPoints:{orderBy:{createdAt:"desc"},take:5}},take:50});return(await Promise.all(t.map(async e=>{let t=e.appointments.filter(e=>"Realizado"===e.status).length,a=e.appointments.length,r=a>0?Math.round(t/a*100):0,n=function(e){if(e.length<2)return"stable";let t=e.slice(0,2).reduce((e,t)=>e+t.intensity,0)/2,a=e.slice(2,4).reduce((e,t)=>e+t.intensity,0)/2;return t<a-1?"improving":t>a+1?"worsening":"stable"}(e.painPoints),s=Math.min(Math.round(10*t+.5*r+("improving"===n?20:"stable"===n?10:0)),100);return{patientId:e.id,patientName:e.name,riskLevel:r<50||"worsening"===n&&s<30?"critical":r<70||s<40?"high":r<85||s<70?"medium":"low",recoveryProgress:s,attendanceRate:r,painTrend:n}}))).sort((e,t)=>{let a={critical:0,high:1,medium:2,low:3};return a[e.riskLevel]-a[t.riskLevel]})}async function T(e,t){let a=await l._B.$queryRaw`
    SELECT 
      DATE_TRUNC('week', "startTime") as week,
      COUNT(*) as appointments,
      COUNT(CASE WHEN status = 'Realizado' THEN 1 END) as completed,
      COUNT(CASE WHEN status = 'Falta' THEN 1 END) as "noShow"
    FROM "Appointment"
    WHERE "therapistId" = ${e}
      AND "startTime" >= ${t}
    GROUP BY week
    ORDER BY week;
  `,r=await l._B.$queryRaw`
    SELECT 
      type as "treatmentType",
      COUNT(*) as "patientCount",
      COUNT(CASE WHEN status = 'Realizado' THEN 1 END) * 100.0 / COUNT(*) as "successRate",
      AVG(EXTRACT(DAY FROM (CURRENT_DATE - DATE("startTime")))) as "avgDuration"
    FROM "Appointment"
    WHERE "therapistId" = ${e}
      AND "startTime" >= ${t}
    GROUP BY type
    ORDER BY "successRate" DESC;
  `,n=function(e){let t=[],a=["Jan","Fev","Mar","Abr","Mai","Jun"];for(let e=0;e<6;e++)t.push({month:a[e],avgPainReduction:Math.round(30+40*Math.random()),patientsSurvey:Math.round(20+30*Math.random())});return t}(0);return{weeklyAppointments:a.map(e=>({week:new Date(e.week).toLocaleDateString("pt-BR"),appointments:Number(e.appointments),completed:Number(e.completed),noShow:Number(e.noShow)})),treatmentSuccess:r.map(e=>({treatmentType:e.treatmentType,successRate:Math.round(Number(e.successRate)),avgDuration:Math.round(Number(e.avgDuration)||0),patientCount:Number(e.patientCount)})),painReductionTrends:n}}async function R(e){let t=[];return(await l._B.$queryRaw`
    SELECT 
      p.id,
      p.name,
      COUNT(*) as total_appointments,
      COUNT(CASE WHEN a.status = 'Falta' THEN 1 END) as missed_appointments
    FROM "Patient" p
    JOIN "Appointment" a ON p.id = a."patientId"
    WHERE a."therapistId" = ${e}
      AND a."startTime" >= ${new Date(Date.now()-2592e6)}
    GROUP BY p.id, p.name
    HAVING COUNT(CASE WHEN a.status = 'Falta' THEN 1 END) > 2
    ORDER BY missed_appointments DESC;
  `).forEach(e=>{t.push({type:"patient_risk",severity:"high",message:"Paciente com alto \xedndice de faltas",patientName:e.name,actionRequired:"Entrar em contato para verificar situa\xe7\xe3o",timestamp:new Date().toISOString()})}),await l._B.appointment.count({where:{therapistId:e,startTime:{gte:new Date(new Date().setHours(0,0,0,0)),lte:new Date(new Date().setHours(23,59,59,999))}}})>8&&t.push({type:"capacity_warning",severity:"medium",message:"Agenda com alta demanda hoje",actionRequired:"Monitorar tempo de atendimento e considerar otimiza\xe7\xf5es",timestamp:new Date().toISOString()}),t}async function P(e){try{if(await E.generateClinicInsights(e))return{dischargeCandidates:[{patientName:"Maria Silva",probability:92,expectedDate:"2024-02-15"},{patientName:"Jo\xe3o Santos",probability:87,expectedDate:"2024-02-20"},{patientName:"Ana Costa",probability:78,expectedDate:"2024-02-25"}],riskPatients:[{patientName:"Pedro Oliveira",riskFactors:["Faltas frequentes","Dor persistente","Baixa ades\xe3o aos exerc\xedcios"],recommendedActions:["Reagendar consulta de acompanhamento","Revisar plano de exerc\xedcios","Contato telef\xf4nico para suporte"]},{patientName:"Carla Lima",riskFactors:["Progresso lento","Complexidade do caso"],recommendedActions:["Considerar refer\xeancia para especialista","Intensificar acompanhamento","Avalia\xe7\xe3o de exames complementares"]}]}}catch(e){d.aw.error("Failed to get AI predictions",{error:e})}return{dischargeCandidates:[],riskPatients:[]}}let I=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/analytics/advanced/route",pathname:"/api/analytics/advanced",filename:"route",bundlePath:"app/api/analytics/advanced/route"},resolvedPagePath:"C:\\Users\\amand\\Rafael\\aifisio\\fisioflow-aistudio\\app\\api\\analytics\\advanced\\route.ts",nextConfigOutput:"standalone",userland:r}),{requestAsyncStorage:S,staticGenerationAsyncStorage:N,serverHooks:O}=I,$="/api/analytics/advanced/route";function b(){return(0,i.patchFetch)({serverHooks:O,staticGenerationAsyncStorage:N})}},90455:(e,t,a)=>{a.d(t,{I8:()=>d,handlers:()=>m,ts:()=>h});var r=a(96708),n=a(80772),s=a(7585),i=a(49237),o=a(42023),c=a.n(o);let l={adapter:(0,s.N)(i._B),providers:[(0,n.Z)({name:"credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},async authorize(e){if(!e?.email||!e?.password)return null;try{let t=await i._B.user.findUnique({where:{email:e.email}});if(!t||!t.passwordHash||!await c().compare(e.password,t.passwordHash))return null;return{id:t.id,email:t.email,name:t.name,role:t.role,avatarUrl:t.avatarUrl||void 0}}catch(e){return console.error("Auth error:",e),null}}})],session:{strategy:"jwt",maxAge:2592e3},jwt:{maxAge:2592e3},callbacks:{jwt:async({token:e,user:t})=>(t&&(e.role=t.role,e.avatarUrl=t.avatarUrl),e),session:async({session:e,token:t})=>(t&&(e.user.id=t.sub,e.user.role=t.role,e.user.avatarUrl=t.avatarUrl),e)},pages:{signIn:"/login",error:"/login"},secret:process.env.NEXTAUTH_SECRET},{auth:d,handlers:m,signIn:u,signOut:p}=(0,r.ZP)(l);async function h(){let e=await d();return e?.user||null}},16836:(e,t,a)=>{a.d(t,{M3:()=>i,cj:()=>c});var r=a(87070),n=a(73077),s=a(67754);async function i(e,t,a){return(0,s.O$)(`external.${e}.${t}`,a,{service:e,endpoint:t})}async function o(e,t){let a=Date.now();return{result:await t(),duration:Date.now()-a}}function c(){var e;return e=async e=>{let t=await o("health.check",async()=>{let e=process.memoryUsage(),t=process.uptime(),a={database:{status:"unknown",responseTime:0},redis:{status:"unknown",responseTime:0},memory:{status:e.heapUsed/e.heapTotal<.9?"healthy":"warning",usage:{used:Math.round(e.heapUsed/1024/1024),total:Math.round(e.heapTotal/1024/1024),percentage:Math.round(e.heapUsed/e.heapTotal*100)}},system:{status:"healthy",nodeVersion:process.version,platform:process.platform}};try{let{duration:e}=await o("database.ping",async()=>(await new Promise(e=>setTimeout(e,10)),!0));a.database={status:"healthy",responseTime:e}}catch(e){a.database={status:"unhealthy",responseTime:0,error:e.message}}try{let{duration:e}=await o("redis.ping",async()=>(await new Promise(e=>setTimeout(e,5)),!0));a.redis={status:"healthy",responseTime:e}}catch(e){a.redis={status:"unhealthy",responseTime:0,error:e.message}}return{status:Object.values(a).every(e=>"healthy"===e.status)?"healthy":"unhealthy",timestamp:new Date().toISOString(),uptime:Math.round(t),version:process.env.npm_package_version||"1.0.0",environment:"production",checks:a}});return r.NextResponse.json({...t.result,responseTime:t.duration})},async t=>{let a;let i=Date.now(),o=process.memoryUsage(),c=t.method||"GET",l=t.url||"",d=t.headers.get("user-agent")||"unknown",m=t.headers.get("x-forwarded-for")||t.headers.get("x-real-ip")||"unknown",u=200;try{u=(a=await (0,s.O$)(`api.${c.toLowerCase()}.${l.split("?")[0]}`,()=>e(t),{method:c,url:l,userAgent:d,ip:m})).status,s.B1.recordAPICall(l,c,u)}catch(e){u=500,n.aw.error("API handler error",{method:c,url:l,error:e.message,stack:e.stack,userAgent:d,ip:m}),a=r.NextResponse.json({error:"Internal Server Error"},{status:500})}let p=Date.now()-i,h=process.memoryUsage(),g={rss:h.rss-o.rss,heapTotal:h.heapTotal-o.heapTotal,heapUsed:h.heapUsed-o.heapUsed,external:h.external-o.external};return n.aw.logAPICall(c,l,u,p,{ip:m,userAgent:d,memoryDelta:g}),a.headers.set("X-Response-Time",`${p}ms`),a.headers.set("X-Memory-Usage",JSON.stringify(g)),p>1e3&&n.aw.warn("Slow API request detected",{method:c,url:l,duration:p,statusCode:u,memoryDelta:g}),a}}},73077:(e,t,a)=>{a.d(t,{aw:()=>l});var r=a(94624),n=a.n(r);n().addColors({error:"red",warn:"yellow",info:"green",http:"magenta",debug:"white"}),n().format.combine(n().format.timestamp({format:"YYYY-MM-DD HH:mm:ss:ms"}),n().format.colorize({all:!0}),n().format.printf(e=>{let{timestamp:t,level:a,message:r,...n}=e,s=Object.keys(n).length?JSON.stringify(n,null,2):"";return`${t} [${a}]: ${r} ${s}`}));let s=n().format.combine(n().format.timestamp(),n().format.errors({stack:!0}),n().format.json()),i=[];i.push(new(n()).transports.Console({format:s})),i.push(new(n()).transports.File({filename:"logs/error.log",level:"error",format:s}),new(n()).transports.File({filename:"logs/combined.log",format:s}));let o=n().createLogger({level:process.env.LOG_LEVEL||"info",levels:{error:0,warn:1,info:2,http:3,debug:4},format:s,transports:i,exitOnError:!1});class c{constructor(e){this.baseLogger=e}log(e,t,a){this.baseLogger.log(e,t,a)}error(e,t){this.log("error",e,t)}warn(e,t){this.log("warn",e,t)}info(e,t){this.log("info",e,t)}http(e,t){this.log("http",e,t)}debug(e,t){this.log("debug",e,t)}logAPICall(e,t,a,r,n){this.http(`${e} ${t} ${a}`,{...n,method:e,url:t,statusCode:a,duration:r})}logDatabaseQuery(e,t,a){this.debug("Database query executed",{...a,query:e.substring(0,100)+(e.length>100?"...":""),duration:t})}logCacheOperation(e,t,a){this.debug(`Cache ${e}`,{...a,operation:e,key:t})}logBusinessEvent(e,t,a){this.info(`Business event: ${e}`,{...a,event:e,...t})}logSecurityEvent(e,t,a){this.warn(`Security event: ${e}`,{...a,event:e,...t})}}let l=new c(o)},67754:(e,t,a)=>{a.d(t,{B1:()=>i,O$:()=>o});var r=a(73077);class n{record(e,t,a="count",r={}){this.metrics.push({name:e,value:t,unit:a,timestamp:new Date,tags:r}),this.metrics.length>1e3&&(this.metrics=this.metrics.slice(-1e3))}recordPerformance(e,t,a="success",r){this.performanceMetrics.push({operation:e,duration:t,status:a,metadata:r}),this.performanceMetrics.length>500&&(this.performanceMetrics=this.performanceMetrics.slice(-500))}getSummary(){let e=this.metrics.length,t=this.performanceMetrics.length,a=this.performanceMetrics.filter(e=>"success"===e.status),r=a.length>0?a.reduce((e,t)=>e+t.duration,0)/a.length:0,n=t>0?this.performanceMetrics.filter(e=>"error"===e.status).length/t*100:0;return{totalMetrics:e,totalPerformanceMetrics:t,averageResponseTime:Math.round(100*r)/100,errorRate:Math.round(100*n)/100}}getRecentMetrics(e=50){return this.metrics.slice(-e)}getRecentPerformanceMetrics(e=50){return this.performanceMetrics.slice(-e)}clear(){this.metrics=[],this.performanceMetrics=[]}constructor(){this.metrics=[],this.performanceMetrics=[]}}let s=new n;class i{static recordAPICall(e,t,a){s.record("api_calls_total",1,"count",{endpoint:e,method:t,status:a.toString()}),r.aw.api("API call recorded",{endpoint:e,method:t,statusCode:a,timestamp:new Date().toISOString()})}static recordBusinessEvent(e,t={}){s.record("business_events",1,"count",{eventType:e,...t}),r.aw.info("Business event recorded",{eventType:e,metadata:t,timestamp:new Date().toISOString()})}static recordSecurityEvent(e,t){s.record("security_events",1,"count",{type:e,severity:t}),r.aw.security("Security event recorded",{type:e,severity:t,timestamp:new Date().toISOString()})}static recordPerformance(e,t,a="success"){s.recordPerformance(e,t,a),r.aw.performance("Performance recorded",{operation:e,duration:t,status:a,timestamp:new Date().toISOString()})}}async function o(e,t){let a=Date.now();try{let r=await t(),n=Date.now()-a;return i.recordPerformance(e,n,"success"),r}catch(r){let t=Date.now()-a;throw i.recordPerformance(e,t,"error"),r}}}};var t=require("../../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),r=t.X(0,[216,237],()=>a(13211));module.exports=r})();