"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/health/route";
exports.ids = ["app/api/health/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "winston":
/*!**************************!*\
  !*** external "winston" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("winston");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fhealth%2Froute&page=%2Fapi%2Fhealth%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fhealth%2Froute.ts&appDir=C%3A%5CUsers%5Camand%5CRafael%5Caifisio%5Cfisioflow-aistudio%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Camand%5CRafael%5Caifisio%5Cfisioflow-aistudio&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fhealth%2Froute&page=%2Fapi%2Fhealth%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fhealth%2Froute.ts&appDir=C%3A%5CUsers%5Camand%5CRafael%5Caifisio%5Cfisioflow-aistudio%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Camand%5CRafael%5Caifisio%5Cfisioflow-aistudio&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_amand_Rafael_aifisio_fisioflow_aistudio_app_api_health_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/health/route.ts */ \"(rsc)/./app/api/health/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"standalone\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/health/route\",\n        pathname: \"/api/health\",\n        filename: \"route\",\n        bundlePath: \"app/api/health/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\amand\\\\Rafael\\\\aifisio\\\\fisioflow-aistudio\\\\app\\\\api\\\\health\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_amand_Rafael_aifisio_fisioflow_aistudio_app_api_health_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/health/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZoZWFsdGglMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmhlYWx0aCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmhlYWx0aCUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNhbWFuZCU1Q1JhZmFlbCU1Q2FpZmlzaW8lNUNmaXNpb2Zsb3ctYWlzdHVkaW8lNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q2FtYW5kJTVDUmFmYWVsJTVDYWlmaXNpbyU1Q2Zpc2lvZmxvdy1haXN0dWRpbyZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD1zdGFuZGFsb25lJnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ2lDO0FBQzlHO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZmlzaW9mbG93LW5leHQvP2UyYzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcYW1hbmRcXFxcUmFmYWVsXFxcXGFpZmlzaW9cXFxcZmlzaW9mbG93LWFpc3R1ZGlvXFxcXGFwcFxcXFxhcGlcXFxcaGVhbHRoXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcInN0YW5kYWxvbmVcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvaGVhbHRoL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvaGVhbHRoXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9oZWFsdGgvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCJDOlxcXFxVc2Vyc1xcXFxhbWFuZFxcXFxSYWZhZWxcXFxcYWlmaXNpb1xcXFxmaXNpb2Zsb3ctYWlzdHVkaW9cXFxcYXBwXFxcXGFwaVxcXFxoZWFsdGhcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2hlYWx0aC9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fhealth%2Froute&page=%2Fapi%2Fhealth%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fhealth%2Froute.ts&appDir=C%3A%5CUsers%5Camand%5CRafael%5Caifisio%5Cfisioflow-aistudio%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Camand%5CRafael%5Caifisio%5Cfisioflow-aistudio&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/health/route.ts":
/*!*********************************!*\
  !*** ./app/api/health/route.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   HEAD: () => (/* binding */ HEAD)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_middleware_performance__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/middleware/performance */ \"(rsc)/./lib/middleware/performance.ts\");\n\n\n// Use the new performance-optimized health check handler\nconst GET = (0,_lib_middleware_performance__WEBPACK_IMPORTED_MODULE_1__.createHealthCheckHandler)();\n// Support HEAD requests for simple health checks\nasync function HEAD() {\n    return new next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse(null, {\n        status: 200\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2hlYWx0aC9yb3V0ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTJDO0FBQzZCO0FBRXhFLHlEQUF5RDtBQUNsRCxNQUFNRSxNQUFNRCxxRkFBd0JBLEdBQUc7QUFFOUMsaURBQWlEO0FBQzFDLGVBQWVFO0lBQ3BCLE9BQU8sSUFBSUgscURBQVlBLENBQUMsTUFBTTtRQUFFSSxRQUFRO0lBQUk7QUFDOUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9maXNpb2Zsb3ctbmV4dC8uL2FwcC9hcGkvaGVhbHRoL3JvdXRlLnRzPzU4NWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInO1xyXG5pbXBvcnQgeyBjcmVhdGVIZWFsdGhDaGVja0hhbmRsZXIgfSBmcm9tICdAL2xpYi9taWRkbGV3YXJlL3BlcmZvcm1hbmNlJztcclxuXHJcbi8vIFVzZSB0aGUgbmV3IHBlcmZvcm1hbmNlLW9wdGltaXplZCBoZWFsdGggY2hlY2sgaGFuZGxlclxyXG5leHBvcnQgY29uc3QgR0VUID0gY3JlYXRlSGVhbHRoQ2hlY2tIYW5kbGVyKCk7XHJcblxyXG4vLyBTdXBwb3J0IEhFQUQgcmVxdWVzdHMgZm9yIHNpbXBsZSBoZWFsdGggY2hlY2tzXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBIRUFEKCkge1xyXG4gIHJldHVybiBuZXcgTmV4dFJlc3BvbnNlKG51bGwsIHsgc3RhdHVzOiAyMDAgfSk7XHJcbn0iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwiY3JlYXRlSGVhbHRoQ2hlY2tIYW5kbGVyIiwiR0VUIiwiSEVBRCIsInN0YXR1cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/api/health/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/middleware/performance.ts":
/*!***************************************!*\
  !*** ./lib/middleware/performance.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createHealthCheckHandler: () => (/* binding */ createHealthCheckHandler),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   measureExecutionTime: () => (/* binding */ measureExecutionTime),\n/* harmony export */   trackCacheOperation: () => (/* binding */ trackCacheOperation),\n/* harmony export */   trackDatabaseOperation: () => (/* binding */ trackDatabaseOperation),\n/* harmony export */   trackExternalAPICall: () => (/* binding */ trackExternalAPICall),\n/* harmony export */   withPerformanceMonitoring: () => (/* binding */ withPerformanceMonitoring)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _monitoring_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../monitoring/logger */ \"(rsc)/./lib/monitoring/logger.ts\");\n/* harmony import */ var _monitoring_metrics__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../monitoring/metrics */ \"(rsc)/./lib/monitoring/metrics.ts\");\n// lib/middleware/performance.ts\n\n\n\n// Performance monitoring middleware for API routes\nfunction withPerformanceMonitoring(handler) {\n    return async (req)=>{\n        const startTime = Date.now();\n        const startMemory = process.memoryUsage();\n        const method = req.method || \"GET\";\n        const url = req.url || \"\";\n        const userAgent = req.headers.get(\"user-agent\") || \"unknown\";\n        const ip = req.headers.get(\"x-forwarded-for\") || req.headers.get(\"x-real-ip\") || \"unknown\";\n        let response;\n        let statusCode = 200;\n        try {\n            response = await (0,_monitoring_metrics__WEBPACK_IMPORTED_MODULE_2__.timeAsyncOperation)(`api.${method.toLowerCase()}.${url.split(\"?\")[0]}`, ()=>handler(req));\n            statusCode = response.status;\n            // Record business metrics\n            _monitoring_metrics__WEBPACK_IMPORTED_MODULE_2__.BusinessMetrics.recordAPICall(url, method, statusCode);\n        } catch (error) {\n            statusCode = 500;\n            _monitoring_logger__WEBPACK_IMPORTED_MODULE_1__.structuredLogger.error(\"API handler error\", {\n                method,\n                url,\n                error: error.message,\n                stack: error.stack,\n                userAgent,\n                ip\n            });\n            response = next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Internal Server Error\"\n            }, {\n                status: 500\n            });\n        }\n        const endTime = Date.now();\n        const duration = endTime - startTime;\n        const endMemory = process.memoryUsage();\n        // Calculate memory delta\n        const memoryDelta = {\n            rss: endMemory.rss - startMemory.rss,\n            heapTotal: endMemory.heapTotal - startMemory.heapTotal,\n            heapUsed: endMemory.heapUsed - startMemory.heapUsed,\n            external: endMemory.external - startMemory.external\n        };\n        // Log performance metrics\n        _monitoring_logger__WEBPACK_IMPORTED_MODULE_1__.structuredLogger.logAPICall(method, url, statusCode, duration, {\n            ip,\n            userAgent,\n            memoryDelta\n        });\n        // Add performance headers to response\n        response.headers.set(\"X-Response-Time\", `${duration}ms`);\n        response.headers.set(\"X-Memory-Usage\", JSON.stringify(memoryDelta));\n        // Warning for slow requests\n        if (duration > 1000) {\n            _monitoring_logger__WEBPACK_IMPORTED_MODULE_1__.structuredLogger.warn(\"Slow API request detected\", {\n                method,\n                url,\n                duration,\n                statusCode,\n                memoryDelta\n            });\n        }\n        return response;\n    };\n}\n// Database query performance tracking\nasync function trackDatabaseOperation(operation, query, context) {\n    return (0,_monitoring_metrics__WEBPACK_IMPORTED_MODULE_2__.timeAsyncOperation)(`database.${operation}`, query);\n}\n// Cache operation performance tracking\nasync function trackCacheOperation(operation, key, cacheOperation) {\n    return (0,_monitoring_metrics__WEBPACK_IMPORTED_MODULE_2__.timeAsyncOperation)(`cache.${operation}`, async ()=>{\n        const result = await cacheOperation();\n        // Map operation types to logger expected types\n        let logOperation;\n        if (operation === \"get\") {\n            logOperation = result !== null ? \"hit\" : \"miss\";\n        } else if (operation === \"del\") {\n            logOperation = \"delete\";\n        } else {\n            logOperation = operation;\n        }\n        _monitoring_logger__WEBPACK_IMPORTED_MODULE_1__.structuredLogger.logCacheOperation(logOperation, key);\n        return result;\n    });\n}\n// Performance monitoring for external API calls\nasync function trackExternalAPICall(service, endpoint, apiCall) {\n    return (0,_monitoring_metrics__WEBPACK_IMPORTED_MODULE_2__.timeAsyncOperation)(`external.${service}.${endpoint}`, apiCall);\n}\n// Utility to measure function execution time\nasync function measureExecutionTime(operation, fn) {\n    const startTime = Date.now();\n    const result = await fn();\n    const duration = Date.now() - startTime;\n    return {\n        result,\n        duration\n    };\n}\n// Health check with performance metrics\nfunction createHealthCheckHandler() {\n    return withPerformanceMonitoring(async (req)=>{\n        const healthData = await measureExecutionTime(\"health.check\", async ()=>{\n            const memoryUsage = process.memoryUsage();\n            const uptime = process.uptime();\n            // Basic health checks\n            const checks = {\n                database: {\n                    status: \"unknown\",\n                    responseTime: 0\n                },\n                redis: {\n                    status: \"unknown\",\n                    responseTime: 0\n                },\n                memory: {\n                    status: memoryUsage.heapUsed / memoryUsage.heapTotal < 0.9 ? \"healthy\" : \"warning\",\n                    usage: {\n                        used: Math.round(memoryUsage.heapUsed / 1024 / 1024),\n                        total: Math.round(memoryUsage.heapTotal / 1024 / 1024),\n                        percentage: Math.round(memoryUsage.heapUsed / memoryUsage.heapTotal * 100)\n                    }\n                },\n                system: {\n                    status: \"healthy\",\n                    nodeVersion: process.version,\n                    platform: process.platform\n                }\n            };\n            // Test database connection\n            try {\n                const { duration: dbDuration } = await measureExecutionTime(\"database.ping\", async ()=>{\n                    // Add your database ping logic here\n                    await new Promise((resolve)=>setTimeout(resolve, 10)); // Mock ping\n                    return true;\n                });\n                checks.database = {\n                    status: \"healthy\",\n                    responseTime: dbDuration\n                };\n            } catch (error) {\n                checks.database = {\n                    status: \"unhealthy\",\n                    responseTime: 0,\n                    error: error.message\n                };\n            }\n            // Test Redis connection\n            try {\n                const { duration: redisDuration } = await measureExecutionTime(\"redis.ping\", async ()=>{\n                    // Add your Redis ping logic here\n                    await new Promise((resolve)=>setTimeout(resolve, 5)); // Mock ping\n                    return true;\n                });\n                checks.redis = {\n                    status: \"healthy\",\n                    responseTime: redisDuration\n                };\n            } catch (error) {\n                checks.redis = {\n                    status: \"unhealthy\",\n                    responseTime: 0,\n                    error: error.message\n                };\n            }\n            const overallStatus = Object.values(checks).every((check)=>check.status === \"healthy\") ? \"healthy\" : \"unhealthy\";\n            return {\n                status: overallStatus,\n                timestamp: new Date().toISOString(),\n                uptime: Math.round(uptime),\n                version: process.env.npm_package_version || \"1.0.0\",\n                environment: \"development\" || 0,\n                checks\n            };\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            ...healthData.result,\n            responseTime: healthData.duration\n        });\n    });\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (withPerformanceMonitoring);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/middleware/performance.ts\n");

/***/ }),

/***/ "(rsc)/./lib/monitoring/logger.ts":
/*!**********************************!*\
  !*** ./lib/monitoring/logger.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   logger: () => (/* binding */ logger),\n/* harmony export */   structuredLogger: () => (/* binding */ structuredLogger)\n/* harmony export */ });\n/* harmony import */ var winston__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! winston */ \"winston\");\n/* harmony import */ var winston__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(winston__WEBPACK_IMPORTED_MODULE_0__);\n// lib/monitoring/logger.ts\n\n// Define log levels\nconst levels = {\n    error: 0,\n    warn: 1,\n    info: 2,\n    http: 3,\n    debug: 4\n};\n// Define colors for each level\nconst colors = {\n    error: \"red\",\n    warn: \"yellow\",\n    info: \"green\",\n    http: \"magenta\",\n    debug: \"white\"\n};\nwinston__WEBPACK_IMPORTED_MODULE_0___default().addColors(colors);\n// Custom format for development\nconst developmentFormat = winston__WEBPACK_IMPORTED_MODULE_0___default().format.combine(winston__WEBPACK_IMPORTED_MODULE_0___default().format.timestamp({\n    format: \"YYYY-MM-DD HH:mm:ss:ms\"\n}), winston__WEBPACK_IMPORTED_MODULE_0___default().format.colorize({\n    all: true\n}), winston__WEBPACK_IMPORTED_MODULE_0___default().format.printf((info)=>{\n    const { timestamp, level, message, ...meta } = info;\n    const metaString = Object.keys(meta).length ? JSON.stringify(meta, null, 2) : \"\";\n    return `${timestamp} [${level}]: ${message} ${metaString}`;\n}));\n// Custom format for production\nconst productionFormat = winston__WEBPACK_IMPORTED_MODULE_0___default().format.combine(winston__WEBPACK_IMPORTED_MODULE_0___default().format.timestamp(), winston__WEBPACK_IMPORTED_MODULE_0___default().format.errors({\n    stack: true\n}), winston__WEBPACK_IMPORTED_MODULE_0___default().format.json());\n// Create transports\nconst transports = [];\n// Console transport for development\nif (true) {\n    transports.push(new (winston__WEBPACK_IMPORTED_MODULE_0___default().transports).Console({\n        format: developmentFormat\n    }));\n} else {}\n// File transports for production\nif (false) {}\n// Create the logger\nconst logger = winston__WEBPACK_IMPORTED_MODULE_0___default().createLogger({\n    level: process.env.LOG_LEVEL || ( false ? 0 : \"debug\"),\n    levels,\n    format: productionFormat,\n    transports,\n    exitOnError: false\n});\nclass ContextualLogger {\n    constructor(baseLogger){\n        this.baseLogger = baseLogger;\n    }\n    log(level, message, context) {\n        this.baseLogger.log(level, message, context);\n    }\n    error(message, context) {\n        this.log(\"error\", message, context);\n    }\n    warn(message, context) {\n        this.log(\"warn\", message, context);\n    }\n    info(message, context) {\n        this.log(\"info\", message, context);\n    }\n    http(message, context) {\n        this.log(\"http\", message, context);\n    }\n    debug(message, context) {\n        this.log(\"debug\", message, context);\n    }\n    // Specialized logging methods\n    logAPICall(method, url, statusCode, duration, context) {\n        this.http(`${method} ${url} ${statusCode}`, {\n            ...context,\n            method,\n            url,\n            statusCode,\n            duration\n        });\n    }\n    logDatabaseQuery(query, duration, context) {\n        this.debug(\"Database query executed\", {\n            ...context,\n            query: query.substring(0, 100) + (query.length > 100 ? \"...\" : \"\"),\n            duration\n        });\n    }\n    logCacheOperation(operation, key, context) {\n        this.debug(`Cache ${operation}`, {\n            ...context,\n            operation,\n            key\n        });\n    }\n    logBusinessEvent(event, details, context) {\n        this.info(`Business event: ${event}`, {\n            ...context,\n            event,\n            ...details\n        });\n    }\n    logSecurityEvent(event, details, context) {\n        this.warn(`Security event: ${event}`, {\n            ...context,\n            event,\n            ...details\n        });\n    }\n}\nconst structuredLogger = new ContextualLogger(logger);\n// Export both for flexibility\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (structuredLogger);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/monitoring/logger.ts\n");

/***/ }),

/***/ "(rsc)/./lib/monitoring/metrics.ts":
/*!***********************************!*\
  !*** ./lib/monitoring/metrics.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BusinessMetrics: () => (/* binding */ BusinessMetrics),\n/* harmony export */   metrics: () => (/* binding */ metrics),\n/* harmony export */   timeAsyncOperation: () => (/* binding */ timeAsyncOperation),\n/* harmony export */   timed: () => (/* binding */ timed)\n/* harmony export */ });\n/* harmony import */ var _logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./logger */ \"(rsc)/./lib/monitoring/logger.ts\");\n// lib/monitoring/metrics.ts\n\nclass MetricsCollector {\n    // Record a custom metric\n    record(name, value, unit = \"count\", tags = {}) {\n        this.metrics.push({\n            name,\n            value,\n            unit,\n            timestamp: new Date(),\n            tags\n        });\n        // Keep only last 1000 metrics in memory\n        if (this.metrics.length > 1000) {\n            this.metrics = this.metrics.slice(-1000);\n        }\n    }\n    // Record performance timing\n    recordPerformance(operation, duration, status = \"success\", metadata) {\n        this.performanceMetrics.push({\n            operation,\n            duration,\n            status,\n            metadata\n        });\n        // Keep only last 500 performance metrics in memory\n        if (this.performanceMetrics.length > 500) {\n            this.performanceMetrics = this.performanceMetrics.slice(-500);\n        }\n    }\n    // Get metrics summary\n    getSummary() {\n        const totalMetrics = this.metrics.length;\n        const totalPerformanceMetrics = this.performanceMetrics.length;\n        const successfulOperations = this.performanceMetrics.filter((m)=>m.status === \"success\");\n        const averageResponseTime = successfulOperations.length > 0 ? successfulOperations.reduce((sum, m)=>sum + m.duration, 0) / successfulOperations.length : 0;\n        const errorRate = totalPerformanceMetrics > 0 ? this.performanceMetrics.filter((m)=>m.status === \"error\").length / totalPerformanceMetrics * 100 : 0;\n        return {\n            totalMetrics,\n            totalPerformanceMetrics,\n            averageResponseTime: Math.round(averageResponseTime * 100) / 100,\n            errorRate: Math.round(errorRate * 100) / 100\n        };\n    }\n    // Get recent metrics\n    getRecentMetrics(limit = 50) {\n        return this.metrics.slice(-limit);\n    }\n    // Get recent performance metrics\n    getRecentPerformanceMetrics(limit = 50) {\n        return this.performanceMetrics.slice(-limit);\n    }\n    // Clear all metrics\n    clear() {\n        this.metrics = [];\n        this.performanceMetrics = [];\n    }\n    constructor(){\n        this.metrics = [];\n        this.performanceMetrics = [];\n    }\n}\n// Singleton instance\nconst metrics = new MetricsCollector();\n// Business Metrics class for higher-level metrics\nclass BusinessMetrics {\n    static recordAPICall(endpoint, method, statusCode) {\n        metrics.record(\"api_calls_total\", 1, \"count\", {\n            endpoint,\n            method,\n            status: statusCode.toString()\n        });\n        _logger__WEBPACK_IMPORTED_MODULE_0__.structuredLogger.http(\"API call recorded\", {\n            endpoint,\n            method,\n            statusCode,\n            timestamp: new Date().toISOString()\n        });\n    }\n    static recordBusinessEvent(eventType, metadata = {}) {\n        metrics.record(\"business_events\", 1, \"count\", {\n            eventType,\n            ...metadata\n        });\n        _logger__WEBPACK_IMPORTED_MODULE_0__.structuredLogger.info(\"Business event recorded\", {\n            eventType,\n            metadata,\n            timestamp: new Date().toISOString()\n        });\n    }\n    static recordSecurityEvent(type, severity) {\n        metrics.record(\"security_events\", 1, \"count\", {\n            type,\n            severity\n        });\n        _logger__WEBPACK_IMPORTED_MODULE_0__.structuredLogger.logSecurityEvent(\"Security event recorded\", {\n            type,\n            severity,\n            timestamp: new Date().toISOString()\n        });\n    }\n    static recordPerformance(operation, duration, status = \"success\") {\n        metrics.recordPerformance(operation, duration, status);\n        _logger__WEBPACK_IMPORTED_MODULE_0__.structuredLogger.info(\"Performance recorded\", {\n            operation,\n            duration,\n            status,\n            timestamp: new Date().toISOString()\n        });\n    }\n}\n// Timing decorator for automatic performance tracking\nfunction timed(operation) {\n    return function(target, propertyName, descriptor) {\n        const method = descriptor.value;\n        descriptor.value = async function(...args) {\n            const start = Date.now();\n            try {\n                const result = await method.apply(this, args);\n                const duration = Date.now() - start;\n                BusinessMetrics.recordPerformance(`${operation}.${propertyName}`, duration, \"success\");\n                return result;\n            } catch (error) {\n                const duration = Date.now() - start;\n                BusinessMetrics.recordPerformance(`${operation}.${propertyName}`, duration, \"error\");\n                throw error;\n            }\n        };\n        return descriptor;\n    };\n}\n// Utility function for timing async operations\nasync function timeAsyncOperation(operation, asyncFn) {\n    const start = Date.now();\n    try {\n        const result = await asyncFn();\n        const duration = Date.now() - start;\n        BusinessMetrics.recordPerformance(operation, duration, \"success\");\n        return result;\n    } catch (error) {\n        const duration = Date.now() - start;\n        BusinessMetrics.recordPerformance(operation, duration, \"error\");\n        throw error;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/monitoring/metrics.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fhealth%2Froute&page=%2Fapi%2Fhealth%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fhealth%2Froute.ts&appDir=C%3A%5CUsers%5Camand%5CRafael%5Caifisio%5Cfisioflow-aistudio%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Camand%5CRafael%5Caifisio%5Cfisioflow-aistudio&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=standalone&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();