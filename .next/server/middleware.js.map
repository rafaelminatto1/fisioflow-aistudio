{"version":3,"file":"middleware.js","mappings":"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","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./lib/edge-logger.ts","webpack://_N_E/./middleware.ts","webpack://_N_E/"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","/**\r\n * Edge Runtime Compatible Logger\r\n * Substitui o winston para compatibilidade com Next.js Edge Runtime\r\n */\r\n\r\ntype LogLevel = 'debug' | 'info' | 'warn' | 'error';\r\n\r\ninterface LogEntry {\r\n  level: LogLevel;\r\n  message: string;\r\n  timestamp: string;\r\n  metadata?: Record<string, any>;\r\n  error?: Error;\r\n}\r\n\r\ninterface LoggerMetrics {\r\n  requestCount: number;\r\n  errorCount: number;\r\n  errorRate: number;\r\n  uptime: number;\r\n  startTime: number;\r\n}\r\n\r\nclass EdgeLogger {\r\n  private metrics: LoggerMetrics;\r\n  private logLevel: LogLevel;\r\n  private serviceName: string;\r\n  private environment: string;\r\n\r\n  constructor() {\r\n    this.metrics = {\r\n      requestCount: 0,\r\n      errorCount: 0,\r\n      errorRate: 0,\r\n      uptime: 0,\r\n      startTime: Date.now()\r\n    };\r\n    \r\n    // Usar valores padr√£o seguros para Edge Runtime\r\n    this.logLevel = 'info';\r\n    this.serviceName = 'fisioflow';\r\n    this.environment = 'development';\r\n    \r\n    // Tentar acessar process.env de forma segura\r\n    if (typeof process !== 'undefined' && process.env) {\r\n      this.logLevel = (process.env.LOG_LEVEL as LogLevel) || 'info';\r\n      this.serviceName = process.env.RAILWAY_SERVICE_NAME || 'fisioflow';\r\n      this.environment = process.env.RAILWAY_ENVIRONMENT || process.env.NODE_ENV || 'development';\r\n    }\r\n  }\r\n\r\n  private shouldLog(level: LogLevel): boolean {\r\n    const levels = ['debug', 'info', 'warn', 'error'];\r\n    return levels.indexOf(level) >= levels.indexOf(this.logLevel);\r\n  }\r\n\r\n  private formatLog(entry: LogEntry): string {\r\n    const { level, message, timestamp, metadata, error } = entry;\r\n    \r\n    const logData = {\r\n      timestamp,\r\n      level: level.toUpperCase(),\r\n      service: this.serviceName,\r\n      environment: this.environment,\r\n      message,\r\n      ...(metadata && { metadata }),\r\n      ...(error && { \r\n        error: {\r\n          name: error.name,\r\n          message: error.message,\r\n          stack: error.stack\r\n        }\r\n      })\r\n    };\r\n\r\n    return JSON.stringify(logData);\r\n  }\r\n\r\n  private log(level: LogLevel, message: string, error?: Error, metadata?: Record<string, any>): void {\r\n    if (!this.shouldLog(level)) return;\r\n\r\n    const entry: LogEntry = {\r\n      level,\r\n      message,\r\n      timestamp: new Date().toISOString(),\r\n      metadata,\r\n      error\r\n    };\r\n\r\n    const formattedLog = this.formatLog(entry);\r\n\r\n    // Usar console apropriado para cada n√≠vel\r\n    switch (level) {\r\n      case 'debug':\r\n        console.debug(formattedLog);\r\n        break;\r\n      case 'info':\r\n        console.info(formattedLog);\r\n        break;\r\n      case 'warn':\r\n        console.warn(formattedLog);\r\n        break;\r\n      case 'error':\r\n        console.error(formattedLog);\r\n        this.metrics.errorCount++;\r\n        break;\r\n    }\r\n\r\n    // Atualizar m√©tricas\r\n    this.updateMetrics();\r\n  }\r\n\r\n  private updateMetrics(): void {\r\n    this.metrics.requestCount++;\r\n    this.metrics.uptime = Date.now() - this.metrics.startTime;\r\n    this.metrics.errorRate = this.metrics.requestCount > 0 \r\n      ? (this.metrics.errorCount / this.metrics.requestCount) * 100 \r\n      : 0;\r\n  }\r\n\r\n  // M√©todos p√∫blicos\r\n  debug(message: string, metadata?: Record<string, any>): void {\r\n    this.log('debug', message, undefined, metadata);\r\n  }\r\n\r\n  info(message: string, metadata?: Record<string, any>): void {\r\n    this.log('info', message, undefined, metadata);\r\n  }\r\n\r\n  warn(message: string, metadata?: Record<string, any>): void {\r\n    this.log('warn', message, undefined, metadata);\r\n  }\r\n\r\n  error(message: string, error?: Error, metadata?: Record<string, any>): void {\r\n    this.log('error', message, error, metadata);\r\n  }\r\n\r\n  getMetrics(): LoggerMetrics {\r\n    return {\r\n      ...this.metrics,\r\n      uptime: Date.now() - this.metrics.startTime\r\n    };\r\n  }\r\n\r\n  // Middleware para requisi√ß√µes\r\n  createRequestMiddleware() {\r\n    return (request: Request) => {\r\n      const startTime = Date.now();\r\n      const requestId = Math.random().toString(36).substring(7);\r\n      \r\n      // Log da requisi√ß√£o\r\n      this.info('Requisi√ß√£o recebida', {\r\n        requestId,\r\n        method: request.method,\r\n        url: request.url,\r\n        userAgent: request.headers.get('user-agent'),\r\n        ip: request.headers.get('x-forwarded-for') || 'unknown'\r\n      });\r\n\r\n      // Retorna fun√ß√£o para log da resposta\r\n      return (status: number, error?: Error) => {\r\n        const duration = Date.now() - startTime;\r\n        \r\n        if (error) {\r\n          this.error('Erro na requisi√ß√£o', error, {\r\n            requestId,\r\n            status,\r\n            duration,\r\n            method: request.method,\r\n            url: request.url\r\n          });\r\n        } else {\r\n          this.info('Resposta enviada', {\r\n            requestId,\r\n            status,\r\n            duration,\r\n            method: request.method,\r\n            url: request.url\r\n          });\r\n        }\r\n      };\r\n    };\r\n  }\r\n\r\n  // Performance measurement compat√≠vel com Edge Runtime\r\n  measurePerformance<T>(operation: string, fn: () => T | Promise<T>): T | Promise<T> {\r\n    const startTime = Date.now();\r\n    \r\n    try {\r\n      const result = fn();\r\n      \r\n      if (result instanceof Promise) {\r\n        return result\r\n          .then((value) => {\r\n            const duration = Date.now() - startTime;\r\n            this.debug(`Performance: ${operation}`, { duration });\r\n            return value;\r\n          })\r\n          .catch((error) => {\r\n            const duration = Date.now() - startTime;\r\n            this.error(`Performance error: ${operation}`, error, { duration });\r\n            throw error;\r\n          });\r\n      } else {\r\n        const duration = Date.now() - startTime;\r\n        this.debug(`Performance: ${operation}`, { duration });\r\n        return result;\r\n      }\r\n    } catch (error) {\r\n      const duration = Date.now() - startTime;\r\n      this.error(`Performance error: ${operation}`, error as Error, { duration });\r\n      throw error;\r\n    }\r\n  }\r\n}\r\n\r\n// Inst√¢ncia singleton\r\nconst edgeLogger = new EdgeLogger();\r\n\r\nexport default edgeLogger;\r\nexport { EdgeLogger, type LogLevel, type LoggerMetrics };","/**\r\n * FisioFlow - Next.js Middleware para Railway\r\n * \r\n * Middleware principal que integra:\r\n * - Logs estruturados\r\n * - Monitoramento de performance\r\n * - Health checks\r\n * - Rate limiting\r\n * - CORS\r\n * - Seguran√ßa\r\n */\r\n\r\nimport { NextRequest, NextResponse } from 'next/server';\r\nimport edgeLogger from './lib/edge-logger';\r\n\r\n// Configura√ß√µes do middleware compat√≠veis com Edge Runtime\r\nconst MIDDLEWARE_CONFIG = {\r\n  // Rate limiting\r\n  rateLimit: {\r\n    enabled: (typeof process !== 'undefined' && process.env?.RATE_LIMIT_ENABLED) === 'true',\r\n    windowMs: parseInt((typeof process !== 'undefined' && process.env?.RATE_LIMIT_WINDOW) || '900000'), // 15 minutos\r\n    maxRequests: parseInt((typeof process !== 'undefined' && process.env?.RATE_LIMIT_MAX_REQUESTS) || '100'),\r\n  },\r\n  \r\n  // CORS\r\n  cors: {\r\n    enabled: (typeof process !== 'undefined' && process.env?.CORS_ENABLED) === 'true',\r\n    origins: (typeof process !== 'undefined' && process.env?.CORS_ORIGINS?.split(',')) || ['*'],\r\n    methods: (typeof process !== 'undefined' && process.env?.CORS_METHODS?.split(',')) || ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\r\n    headers: (typeof process !== 'undefined' && process.env?.CORS_HEADERS?.split(',')) || ['Content-Type', 'Authorization'],\r\n  },\r\n  \r\n  // Health check\r\n  healthCheck: {\r\n    enabled: (typeof process !== 'undefined' && process.env?.HEALTH_CHECK_ENABLED) === 'true',\r\n    path: (typeof process !== 'undefined' && process.env?.HEALTH_CHECK_PATH) || '/health',\r\n  },\r\n  \r\n  // Security\r\n  security: {\r\n    helmet: (typeof process !== 'undefined' && process.env?.HELMET_ENABLED) === 'true',\r\n    csrf: (typeof process !== 'undefined' && process.env?.CSRF_PROTECTION) === 'true',\r\n  },\r\n};\r\n\r\n// Cache para rate limiting (em produ√ß√£o usar Redis)\r\nconst rateLimitCache = new Map<string, { count: number; resetTime: number }>();\r\n\r\n// Fun√ß√£o para limpar cache expirado\r\nfunction cleanupRateLimitCache() {\r\n  const now = Date.now();\r\n  for (const [key, value] of Array.from(rateLimitCache.entries())) {\r\n    if (now > value.resetTime) {\r\n      rateLimitCache.delete(key);\r\n    }\r\n  }\r\n}\r\n\r\n// Rate limiting\r\nfunction checkRateLimit(request: NextRequest): boolean {\r\n  if (!MIDDLEWARE_CONFIG.rateLimit.enabled) return true;\r\n  \r\n  const ip = request.headers.get('x-forwarded-for') || \r\n             request.headers.get('x-real-ip') || \r\n             'unknown';\r\n  \r\n  const now = Date.now();\r\n  const windowMs = MIDDLEWARE_CONFIG.rateLimit.windowMs;\r\n  const maxRequests = MIDDLEWARE_CONFIG.rateLimit.maxRequests;\r\n  \r\n  // Limpar cache periodicamente\r\n  if (Math.random() < 0.01) {\r\n    cleanupRateLimitCache();\r\n  }\r\n  \r\n  const key = `rate_limit:${ip}`;\r\n  const current = rateLimitCache.get(key);\r\n  \r\n  if (!current || now > current.resetTime) {\r\n    rateLimitCache.set(key, {\r\n      count: 1,\r\n      resetTime: now + windowMs,\r\n    });\r\n    return true;\r\n  }\r\n  \r\n  if (current.count >= maxRequests) {\r\n    return false;\r\n  }\r\n  \r\n  current.count++;\r\n  return true;\r\n}\r\n\r\n// CORS headers\r\nfunction addCorsHeaders(response: NextResponse, request: NextRequest): NextResponse {\r\n  if (!MIDDLEWARE_CONFIG.cors.enabled) return response;\r\n  \r\n  const origin = request.headers.get('origin');\r\n  const { origins, methods, headers } = MIDDLEWARE_CONFIG.cors;\r\n  \r\n  // Verificar origem\r\n  if (origins.includes('*') || (origin && origins.includes(origin))) {\r\n    response.headers.set('Access-Control-Allow-Origin', origin || '*');\r\n  }\r\n  \r\n  response.headers.set('Access-Control-Allow-Methods', methods.join(', '));\r\n  response.headers.set('Access-Control-Allow-Headers', headers.join(', '));\r\n  response.headers.set('Access-Control-Allow-Credentials', 'true');\r\n  response.headers.set('Access-Control-Max-Age', '86400');\r\n  \r\n  return response;\r\n}\r\n\r\n// Security headers\r\nfunction addSecurityHeaders(response: NextResponse): NextResponse {\r\n  if (!MIDDLEWARE_CONFIG.security.helmet) return response;\r\n  \r\n  // Helmet-like security headers\r\n  response.headers.set('X-Content-Type-Options', 'nosniff');\r\n  response.headers.set('X-Frame-Options', 'DENY');\r\n  response.headers.set('X-XSS-Protection', '1; mode=block');\r\n  response.headers.set('Referrer-Policy', 'strict-origin-when-cross-origin');\r\n  response.headers.set('Permissions-Policy', 'camera=(), microphone=(), geolocation=()');\r\n  \r\n  // CSP para Railway\r\n  const csp = [\r\n    \"default-src 'self'\",\r\n    \"script-src 'self' 'unsafe-inline' 'unsafe-eval'\",\r\n    \"style-src 'self' 'unsafe-inline'\",\r\n    \"img-src 'self' data: https:\",\r\n    \"font-src 'self' data:\",\r\n    \"connect-src 'self' https://api.neon.tech https://*.railway.app\",\r\n    \"frame-ancestors 'none'\",\r\n  ].join('; ');\r\n  \r\n  response.headers.set('Content-Security-Policy', csp);\r\n  \r\n  return response;\r\n}\r\n\r\n// Health check\r\nfunction handleHealthCheck(request: NextRequest): NextResponse | null {\r\n  if (!MIDDLEWARE_CONFIG.healthCheck.enabled) return null;\r\n  \r\n  const { pathname } = new URL(request.url);\r\n  \r\n  if (pathname === MIDDLEWARE_CONFIG.healthCheck.path) {\r\n    const metrics = edgeLogger.getMetrics();\r\n    \r\n    const healthData = {\r\n      status: 'healthy',\r\n      timestamp: new Date().toISOString(),\r\n      uptime: metrics.uptime,\r\n      environment: process.env.RAILWAY_ENVIRONMENT || process.env.NODE_ENV,\r\n      service: process.env.RAILWAY_SERVICE_NAME || 'fisioflow',\r\n      version: process.env.npm_package_version || '1.0.0',\r\n      commit: process.env.RAILWAY_GIT_COMMIT_SHA,\r\n      deploymentId: process.env.RAILWAY_DEPLOYMENT_ID,\r\n      metrics: {\r\n        requestCount: metrics.requestCount,\r\n        errorCount: metrics.errorCount,\r\n        errorRate: metrics.errorRate,\r\n        uptime: metrics.uptime,\r\n      },\r\n      checks: {\r\n        database: 'healthy', // TODO: Implementar check real do DB\r\n        redis: 'healthy',    // TODO: Implementar check real do Redis\r\n      },\r\n    };\r\n    \r\n    edgeLogger.info('Health check executado', { \r\n      ip: request.headers.get('x-forwarded-for') || 'unknown',\r\n      userAgent: request.headers.get('user-agent'),\r\n    });\r\n    \r\n    return NextResponse.json(healthData, {\r\n      status: 200,\r\n      headers: {\r\n        'Cache-Control': 'no-cache, no-store, must-revalidate',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n  }\r\n  \r\n  return null;\r\n}\r\n\r\n// Middleware principal\r\nexport async function middleware(request: NextRequest) {\r\n  return edgeLogger.measurePerformance('middleware_execution', async () => {\r\n    const startTime = Date.now();\r\n    \r\n    // Criar contexto de logging\r\n    const logRequest = edgeLogger.createRequestMiddleware();\r\n    const logResponse = logRequest(request);\r\n    \r\n    try {\r\n      // Health check\r\n      const healthResponse = handleHealthCheck(request);\r\n      if (healthResponse) {\r\n        logResponse(200);\r\n        return healthResponse;\r\n      }\r\n      \r\n      // Rate limiting\r\n      if (!checkRateLimit(request)) {\r\n        edgeLogger.warn('Rate limit excedido', {\r\n          ip: request.headers.get('x-forwarded-for') || 'unknown',\r\n          userAgent: request.headers.get('user-agent'),\r\n          url: request.url,\r\n        });\r\n        \r\n        const response = NextResponse.json(\r\n          { error: 'Rate limit exceeded' },\r\n          { status: 429 }\r\n        );\r\n        \r\n        logResponse(429);\r\n        return addCorsHeaders(addSecurityHeaders(response), request);\r\n      }\r\n      \r\n      // Handle CORS preflight\r\n      if (request.method === 'OPTIONS') {\r\n        const response = new NextResponse(null, { status: 200 });\r\n        logResponse(200);\r\n        return addCorsHeaders(addSecurityHeaders(response), request);\r\n      }\r\n      \r\n      // Continuar com a requisi√ß√£o\r\n      const response = NextResponse.next();\r\n      \r\n      // Adicionar headers de seguran√ßa e CORS\r\n      const finalResponse = addCorsHeaders(addSecurityHeaders(response), request);\r\n      \r\n      // Adicionar headers customizados do Railway\r\n      finalResponse.headers.set('X-Railway-Service', process.env.RAILWAY_SERVICE_NAME || 'fisioflow');\r\n      finalResponse.headers.set('X-Railway-Environment', process.env.RAILWAY_ENVIRONMENT || 'development');\r\n      \r\n      if (process.env.RAILWAY_DEPLOYMENT_ID) {\r\n        finalResponse.headers.set('X-Railway-Deployment', process.env.RAILWAY_DEPLOYMENT_ID);\r\n      }\r\n      \r\n      // Log da resposta\r\n      const duration = Date.now() - startTime;\r\n      logResponse(finalResponse.status);\r\n      \r\n      // Log de performance se demorou muito\r\n      if (duration > 1000) {\r\n        edgeLogger.warn('Requisi√ß√£o lenta detectada', {\r\n          url: request.url,\r\n          method: request.method,\r\n          duration,\r\n        });\r\n      }\r\n      \r\n      return finalResponse;\r\n      \r\n    } catch (error) {\r\n      edgeLogger.error('Erro no middleware', error as Error, {\r\n        url: request.url,\r\n        method: request.method,\r\n        userAgent: request.headers.get('user-agent'),\r\n      });\r\n      \r\n      const errorResponse = NextResponse.json(\r\n        { error: 'Internal server error' },\r\n        { status: 500 }\r\n      );\r\n      \r\n      logResponse(500, error as Error);\r\n      return addCorsHeaders(addSecurityHeaders(errorResponse), request);\r\n    }\r\n  });\r\n}\r\n\r\n// Configura√ß√£o do matcher\r\nexport const config = {\r\n  matcher: [\r\n    /*\r\n     * Match all request paths except for the ones starting with:\r\n     * - _next/static (static files)\r\n     * - _next/image (image optimization files)\r\n     * - favicon.ico (favicon file)\r\n     * - public folder\r\n     */\r\n    '/((?!_next/static|_next/image|favicon.ico|public/).*)',\r\n  ],\r\n};","import \"next/dist/server/web/globals\";\nimport { adapter } from \"next/dist/server/web/adapter\";\n// Import the userland code.\nimport * as _mod from \"private-next-root-dir/middleware.ts\";\nconst mod = {\n    ..._mod\n};\nconst handler = mod.middleware || mod.default;\nconst page = \"/middleware\";\nif (typeof handler !== \"function\") {\n    throw new Error(`The Middleware \"${page}\" must export a \\`middleware\\` or a \\`default\\` function`);\n}\nexport default function nHandler(opts) {\n    return adapter({\n        ...opts,\n        page,\n        handler\n    });\n}\n\n//# sourceMappingURL=middleware.js.map"],"names":["module","exports","require","EdgeLogger","constructor","metrics","requestCount","errorCount","errorRate","uptime","startTime","Date","now","logLevel","serviceName","environment","process","env","LOG_LEVEL","RAILWAY_SERVICE_NAME","RAILWAY_ENVIRONMENT","shouldLog","level","levels","indexOf","formatLog","entry","message","timestamp","metadata","error","JSON","stringify","toUpperCase","service","name","stack","log","toISOString","formattedLog","console","warn","updateMetrics","debug","undefined","info","getMetrics","createRequestMiddleware","requestId","Math","random","toString","substring","method","request","url","userAgent","headers","get","ip","status","duration","measurePerformance","operation","fn","result","Promise","then","value","catch","edgeLogger","MIDDLEWARE_CONFIG","rateLimit","enabled","RATE_LIMIT_ENABLED","windowMs","parseInt","RATE_LIMIT_WINDOW","maxRequests","RATE_LIMIT_MAX_REQUESTS","cors","CORS_ENABLED","origins","CORS_ORIGINS","split","methods","CORS_METHODS","CORS_HEADERS","healthCheck","HEALTH_CHECK_ENABLED","path","HEALTH_CHECK_PATH","security","helmet","HELMET_ENABLED","csrf","CSRF_PROTECTION","rateLimitCache","Map","addCorsHeaders","response","origin","includes","set","join","addSecurityHeaders","middleware","logResponse","logRequest","healthResponse","handleHealthCheck","pathname","URL","healthData","version","npm_package_version","commit","RAILWAY_GIT_COMMIT_SHA","deploymentId","RAILWAY_DEPLOYMENT_ID","checks","database","redis","NextResponse","json","checkRateLimit","cleanupRateLimitCache","key","Array","from","entries","resetTime","delete","current","count","next","finalResponse","errorResponse","config","matcher","mod","middleware_namespaceObject","handler","default","page","nHandler","opts","adapter","C"],"sourceRoot":""}