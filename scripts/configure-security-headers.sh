#!/bin/bash

# Script para configurar headers de seguranÃ§a no FisioFlow
# Este script cria um arquivo de configuraÃ§Ã£o para o Digital Ocean App Platform

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}ðŸ”’ Configurando headers de seguranÃ§a para FisioFlow...${NC}"

# Criar arquivo de configuraÃ§Ã£o nginx para headers de seguranÃ§a
cat > nginx-security.conf << 'EOF'
# Headers de seguranÃ§a para FisioFlow
add_header X-Content-Type-Options nosniff always;
add_header X-Frame-Options DENY always;
add_header X-XSS-Protection "1; mode=block" always;
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
add_header Referrer-Policy "strict-origin-when-cross-origin" always;
add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'none';" always;
add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

# Remover headers que expÃµem informaÃ§Ãµes do servidor
server_tokens off;
more_clear_headers Server;
more_clear_headers X-Powered-By;
EOF

echo -e "${GREEN}âœ… Arquivo nginx-security.conf criado${NC}"

# Criar documentaÃ§Ã£o das configuraÃ§Ãµes
cat > SECURITY-HEADERS.md << 'EOF'
# ConfiguraÃ§Ã£o de Headers de SeguranÃ§a - FisioFlow

## Headers Implementados

### X-Content-Type-Options: nosniff
- **FunÃ§Ã£o**: Previne ataques de MIME type sniffing
- **Valor**: `nosniff`
- **ProteÃ§Ã£o**: ForÃ§a o navegador a respeitar o Content-Type declarado

### X-Frame-Options: DENY
- **FunÃ§Ã£o**: Previne ataques de clickjacking
- **Valor**: `DENY`
- **ProteÃ§Ã£o**: Impede que a pÃ¡gina seja carregada em frames/iframes

### X-XSS-Protection: 1; mode=block
- **FunÃ§Ã£o**: Ativa proteÃ§Ã£o XSS do navegador
- **Valor**: `1; mode=block`
- **ProteÃ§Ã£o**: Bloqueia pÃ¡ginas quando XSS Ã© detectado

### Strict-Transport-Security
- **FunÃ§Ã£o**: ForÃ§a uso de HTTPS
- **Valor**: `max-age=31536000; includeSubDomains`
- **ProteÃ§Ã£o**: Previne downgrade attacks e cookie hijacking

### Referrer-Policy
- **FunÃ§Ã£o**: Controla informaÃ§Ãµes de referrer
- **Valor**: `strict-origin-when-cross-origin`
- **ProteÃ§Ã£o**: Limita vazamento de informaÃ§Ãµes de navegaÃ§Ã£o

### Content-Security-Policy (CSP)
- **FunÃ§Ã£o**: Previne XSS e injeÃ§Ã£o de cÃ³digo
- **Valor**: PolÃ­tica restritiva personalizada
- **ProteÃ§Ã£o**: Controla recursos que podem ser carregados

## VerificaÃ§Ã£o

ApÃ³s aplicar as configuraÃ§Ãµes, todos os headers de seguranÃ§a devem aparecer como âœ… no relatÃ³rio de seguranÃ§a.

## ManutenÃ§Ã£o

- Execute verificaÃ§Ãµes regulares com o script de seguranÃ§a
- Monitore logs de seguranÃ§a no Digital Ocean
- Atualize polÃ­ticas CSP conforme necessÃ¡rio
EOF

echo -e "${GREEN}âœ… DocumentaÃ§Ã£o SECURITY-HEADERS.md criada${NC}"

echo -e "\n${BLUE}ðŸŽ‰ ConfiguraÃ§Ã£o de seguranÃ§a concluÃ­da!${NC}"
echo -e "${YELLOW}ðŸ“‹ PrÃ³ximos passos:${NC}"
echo -e "   1. Configure os headers no Digital Ocean App Platform"
echo -e "   2. Aguarde alguns minutos para aplicaÃ§Ã£o"
echo -e "   3. Teste com: ./scripts/security-check.sh"
echo -e "   4. Leia a documentaÃ§Ã£o em SECURITY-HEADERS.md"