{
  "name": "fisioflow-next",
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint",
    "type-check": "tsc --noEmit",
    "check": "npm run lint && npm run type-check",
    "postinstall": "prisma generate",
    "prebuild": "prisma generate",
    "prisma:migrate": "prisma migrate dev",
    "prisma:studio": "prisma studio",
    "prisma:seed": "tsx prisma/seed.ts",
    "prisma:reset": "prisma migrate reset --force && npm run prisma:seed",
    "db:setup": "prisma generate && prisma db push && npm run prisma:seed",

    "test": "jest",
    "test:unit": "jest --selectProjects unit",
    "test:integration": "jest --selectProjects integration",
    "test:api": "jest --selectProjects api",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:ci": "jest --ci --coverage --watchAll=false",
    "ci:test": "npm run lint && npm run type-check && npm run test",
    "ci:build": "npm run build",
    "ci:deploy": "npm run deploy",
    "release:patch": "npm version patch && git push origin main --tags",
    "release:minor": "npm version minor && git push origin main --tags",
    "release:major": "npm version major && git push origin main --tags",
    "release:prerelease": "npm version prerelease --preid=alpha && git push origin main --tags",
    "format": "prettier --write \"**/*.{js,jsx,ts,tsx,json,css,md}\"",
    "format:check": "prettier --check \"**/*.{js,jsx,ts,tsx,json,css,md}\"",
    "security:audit": "npm audit --audit-level=moderate",
    "security:fix": "npm audit fix",
    "deps:check": "npm outdated",
    "deps:update": "npm update",
    "clean": "rm -rf .next node_modules/.cache",
    "clean:all": "rm -rf .next node_modules package-lock.json && npm install",
    "docker:build": "docker build -t fisioflow .",
    "docker:run": "docker run -p 3000:3000 fisioflow",


    "monitor:health": "bash scripts/health-check.sh",
    "monitor:autofix": "bash scripts/auto-fix.sh",
    "monitor:diagnostic": "node scripts/diagnostic-framework.js",
    "monitor:diagnostic-category": "node scripts/diagnostic-framework.js --category",
    "monitor:autofix-system": "node scripts/auto-fix-system.js",
    "monitor:autofix-force": "node scripts/auto-fix-system.js --force",
    "monitor:autofix-category": "node scripts/auto-fix-system.js --category",
    "monitor:prevention-start": "node scripts/prevention-system.js start",
    "monitor:prevention-stop": "node scripts/prevention-system.js stop",
    "monitor:prevention-status": "node scripts/prevention-system.js status",
    "monitor:prevention-restart": "node scripts/prevention-system.js restart",
    "monitor:alerts": "node scripts/alert-system.js",
    "monitor:alerts-test": "node scripts/alert-system.js --test",
    "monitor:error-detection-start": "node scripts/error-detection.js start",
    "monitor:error-detection-stop": "node scripts/error-detection.js stop",
    "monitor:error-detection-status": "node scripts/error-detection.js status",
    "monitor:error-detection-report": "node scripts/error-detection.js report",
    "monitor:full-check": "npm run monitor:health && npm run monitor:diagnostic",
    "monitor:full-fix": "npm run monitor:diagnostic && npm run monitor:autofix-system",
    "monitor:start-all": "npm run monitor:prevention-start && npm run monitor:error-detection-start",
    "monitor:stop-all": "npm run monitor:prevention-stop && npm run monitor:error-detection-stop",
    "monitor:status-all": "npm run monitor:prevention-status && npm run monitor:error-detection-status",
    "monitor:emergency-fix": "npm run monitor:autofix-force && npm run monitor:full-check",
    "monitor:typescript-check": "npm run monitor:diagnostic-category typescript",
    "monitor:typescript-fix": "npm run monitor:autofix-category typescript",
    "cli:setup": "node scripts/setup-cli-complete.js",
    "cli:test": "node scripts/test-cli-tools.js",
    "cli:update": "npm update -g vercel",
    "cli:version": "node scripts/cli-version-check.js",

    "prisma:quick-studio": "npx prisma studio",
    "docker:quick-build": "docker build -t fisioflow .",
    "docker:quick-run": "docker run -p 3000:3000 fisioflow"
  },
  "dependencies": {
    "@auth/prisma-adapter": "^2.4.0",
    "@google/generative-ai": "^0.24.1",
    "@hookform/resolvers": "3.9.0",
    "@msgpack/msgpack": "^3.1.2",
    "@prisma/client": "^6.15.0",
    "@radix-ui/react-alert-dialog": "^1.1.15",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.3",
    "@radix-ui/react-dropdown-menu": "^2.1.16",
    "@radix-ui/react-form": "^0.1.8",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-popover": "^1.1.15",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-scroll-area": "^1.2.10",
    "@radix-ui/react-select": "^2.2.6",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.6",
    "@radix-ui/react-tabs": "^1.1.13",
    "@radix-ui/react-toast": "^1.2.15",
    "@types/bcryptjs": "^2.4.6",
    "async_hooks": "^1.0.0",
    "autoprefixer": "^10.4.21",
    "aws-sdk": "^2.1691.0",
    "axios": "^1.7.2",
    "bcryptjs": "^2.4.3",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "framer-motion": "^12.23.12",
    "html2pdf.js": "^0.11.1",
    "ioredis": "^5.7.0",
    "js-yaml": "^4.1.0",
    "lucide-react": "^0.408.0",
    "next": "^14.2.32",
    "next-auth": "^5.0.0-beta.29",
    "node-cron": "^3.0.3",
    "node-fetch": "^3.3.2",
    "nodemailer": "^6.9.14",
    "pg": "^8.16.3",
    "puppeteer": "^24.18.0",
    "react": "^18",
    "react-day-picker": "^9.9.0",
    "react-dom": "^18",
    "react-hook-form": "^7.52.1",
    "react-is": "^19.1.1",
    "recharts": "^3.1.2",
    "redis": "^4.7.0",
    "sharp": "^0.34.3",
    "sonner": "^2.0.7",
    "swr": "^2.2.5",
    "tailwind-merge": "^2.6.0",
    "tailwindcss-animate": "^1.0.7",
    "winston": "^3.17.0",
    "ws": "^8.18.3",
    "zod": "^3.23.8"
  },
  "devDependencies": {
    "@babel/preset-env": "^7.28.3",
    "@babel/preset-react": "^7.27.1",
    "@babel/preset-typescript": "^7.27.1",
    "@commitlint/cli": "^19.3.0",
    "@commitlint/config-conventional": "^19.2.2",
    "@jest/globals": "^29.7.0",
    "@tailwindcss/forms": "^0.5.7",
    "@testing-library/dom": "^10.4.1",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/bcryptjs": "2.4.6",
    "@types/html2pdf.js": "^0.10.0",
    "@types/jest": "^29.5.12",
    "@types/node": "^20.14.10",
    "@types/node-cron": "^3.0.11",
    "@types/nodemailer": "^6.4.15",
    "@types/pg": "^8.15.5",
    "@types/react": "18.3.3",
    "@types/react-dom": "18.3.0",
    "@types/supertest": "^6.0.2",
    "@types/ws": "^8.18.1",
    "@typescript-eslint/eslint-plugin": "^7.18.0",
    "@typescript-eslint/parser": "^7.18.0",
    "babel-jest": "^29.7.0",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "dotenv-cli": "^7.4.2",
    "eslint": "^8.57.1",
    "eslint-config-next": "^14.2.15",
    "eslint-config-prettier": "^10.1.8",
    "eslint-plugin-import": "^2.31.0",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-react": "^7.37.2",
    "eslint-plugin-react-hooks": "^5.0.0",
    "husky": "^9.1.4",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "jest-environment-node": "^29.7.0",
    "jest-junit": "^16.0.0",
    "jest-watch-typeahead": "^2.2.2",
    "lint-staged": "^15.2.7",
    "postcss": "8.4.39",
    "prettier": "^3.3.3",
    "prisma": "^6.15.0",
    "rimraf": "^6.0.1",
    "supertest": "^7.1.4",
    "tailwindcss": "3.4.4",
    "ts-jest": "^29.1.2",
    "tsx": "^4.16.2",
    "typescript": "5.5.3",
    "undici": "^7.15.0",
    "vite": "^7.1.3"
  }
}
