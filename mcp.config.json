{
  "version": "1.0.0",
  "name": "FisioFlow MCP Configuration",
  "description": "Model Context Protocol configuration for FisioFlow AI providers with Railway and Neon DB integration",
  "providers": {
    "railway": {
      "name": "Railway Platform",
      "type": "infrastructure",
      "enabled": true,
      "apiKey": "${RAILWAY_API_KEY}",
      "baseUrl": "https://backboard.railway.com/graphql/v2",
      "projectId": "${RAILWAY_PROJECT_ID}",
      "services": {
        "deploy": {
          "enabled": true,
          "autoRedeploy": false,
          "buildCommand": "npm run build",
          "startCommand": "npm start",
          "healthCheckPath": "/api/health",
          "healthCheckTimeout": 120,
          "healthCheckInterval": 30,
          "healthCheckRetries": 5
        },
        "monitoring": {
          "enabled": true,
          "metrics": ["cpu", "memory", "network", "disk", "response_time", "error_rate"],
          "alerts": {
            "cpu": 80,
            "memory": 85,
            "errorRate": 5,
            "responseTime": 2000
          },
          "logs": {
            "enabled": true,
            "retention": "7d",
            "structured": true,
            "level": "info"
          }
        },
        "environment": {
          "production": {
            "domain": "${RAILWAY_PRODUCTION_DOMAIN}",
            "variables": {
              "NODE_ENV": "production",
              "DATABASE_URL": "${DATABASE_URL}",
              "NEXTAUTH_SECRET": "${NEXTAUTH_SECRET}",
              "NEXTAUTH_URL": "${NEXTAUTH_URL}",
              "RAILWAY_STRUCTURED_LOGGING": "true",
              "RAILWAY_METRICS_ENABLED": "true"
            },
            "resources": {
              "cpu": 1000,
              "memory": 1024,
              "autoScaling": {
                "minReplicas": 1,
                "maxReplicas": 3,
                "targetCPU": 70,
                "targetMemory": 80
              }
            }
          },
          "staging": {
            "domain": "${RAILWAY_STAGING_DOMAIN}",
            "variables": {
              "NODE_ENV": "staging",
              "DATABASE_URL": "${STAGING_DATABASE_URL}",
              "RAILWAY_STRUCTURED_LOGGING": "true"
            },
            "resources": {
              "cpu": 500,
              "memory": 512,
              "autoScaling": {
                "minReplicas": 1,
                "maxReplicas": 2,
                "targetCPU": 80,
                "targetMemory": 85
              }
            }
          }
        },
        "deployment": {
          "strategy": "rolling",
          "rollback": {
            "enabled": true,
            "automatic": false,
            "threshold": 5
          },
          "notifications": {
            "slack": "${SLACK_WEBHOOK_URL}",
            "email": "${DEPLOYMENT_EMAIL}",
            "discord": "${DISCORD_WEBHOOK_URL}"
          }
        }
      },
      "rateLimits": {
        "requestsPerMinute": 100,
        "deploysPerHour": 10,
        "apiCallsPerMinute": 200
      },
      "timeout": 60000,
      "retries": 3,
      "webhooks": {
        "deploy": "${RAILWAY_DEPLOY_WEBHOOK}",
        "status": "${RAILWAY_STATUS_WEBHOOK}"
      }
    },
    "neon": {
      "name": "Neon Database",
      "type": "database",
      "enabled": true,
      "apiKey": "${NEON_API_KEY}",
      "projectId": "${NEON_PROJECT_ID}",
      "databaseUrl": "${DATABASE_URL}",
      "pooling": {
        "enabled": true,
        "maxConnections": 20,
        "minConnections": 2,
        "connectionTimeout": 30000,
        "idleTimeout": 600000,
        "statementTimeout": 30000,
        "queryTimeout": 30000
      },
      "extensions": ["pg_trgm", "pg_stat_statements"],
      "optimizations": {
        "ssl": true,
        "connectionPooling": true,
        "readReplicas": false,
        "autoScaling": true
      },
      "backup": {
        "enabled": true,
        "retention": "7d",
        "schedule": "daily"
      },
      "monitoring": {
        "enabled": true,
        "metrics": ["connections", "queries", "performance"],
        "alerts": ["high_connections", "slow_queries"]
      },
      "maintenance": {
        "autoVacuum": true,
        "autoAnalyze": true,
        "maintenanceWindow": "02:00-04:00"
      },
      "scaling": {
        "autoScale": true,
        "minComputeUnits": 0.25,
        "maxComputeUnits": 1.0,
        "suspendAfter": "5m"
      }
    },
    "openai": {
      "name": "OpenAI",
      "type": "openai",
      "enabled": true,
      "apiKey": "${OPENAI_API_KEY}",
      "baseUrl": "https://api.openai.com/v1",
      "models": {
        "gpt-4": {
          "name": "GPT-4",
          "maxTokens": 8192,
          "temperature": 0.7,
          "topP": 1.0,
          "frequencyPenalty": 0.0,
          "presencePenalty": 0.0
        },
        "gpt-3.5-turbo": {
          "name": "GPT-3.5 Turbo",
          "maxTokens": 4096,
          "temperature": 0.7,
          "topP": 1.0,
          "frequencyPenalty": 0.0,
          "presencePenalty": 0.0
        },
        "gpt-4-turbo": {
          "name": "GPT-4 Turbo",
          "maxTokens": 128000,
          "temperature": 0.7,
          "topP": 1.0
        }
      },
      "rateLimits": {
        "requestsPerMinute": 60,
        "tokensPerMinute": 90000
      },
      "timeout": 30000,
      "retries": 3
    },
    "anthropic": {
      "name": "Anthropic Claude",
      "type": "anthropic",
      "enabled": true,
      "apiKey": "${ANTHROPIC_API_KEY}",
      "baseUrl": "https://api.anthropic.com",
      "models": {
        "claude-3-opus": {
          "name": "Claude 3 Opus",
          "maxTokens": 4096,
          "temperature": 0.7,
          "topP": 1.0
        },
        "claude-3-sonnet": {
          "name": "Claude 3 Sonnet",
          "maxTokens": 4096,
          "temperature": 0.7,
          "topP": 1.0
        },
        "claude-3-haiku": {
          "name": "Claude 3 Haiku",
          "maxTokens": 4096,
          "temperature": 0.7,
          "topP": 1.0
        }
      },
      "rateLimits": {
        "requestsPerMinute": 50,
        "tokensPerMinute": 40000
      },
      "timeout": 30000,
      "retries": 3
    },
    "google": {
      "name": "Google Gemini",
      "type": "google",
      "enabled": true,
      "apiKey": "${GEMINI_API_KEY}",
      "baseUrl": "https://generativelanguage.googleapis.com",
      "models": {
        "gemini-pro": {
          "name": "Gemini Pro",
          "maxTokens": 8192,
          "temperature": 0.7,
          "topP": 1.0,
          "topK": 40
        },
        "gemini-pro-vision": {
          "name": "Gemini Pro Vision",
          "maxTokens": 4096,
          "temperature": 0.4,
          "topP": 1.0,
          "topK": 32
        },
        "gemini-1.5-pro": {
          "name": "Gemini 1.5 Pro",
          "maxTokens": 1048576,
          "temperature": 0.7,
          "topP": 1.0
        }
      },
      "rateLimits": {
        "requestsPerMinute": 60,
        "tokensPerMinute": 32000
      },
      "timeout": 30000,
      "retries": 3
    },
    "github": {
      "name": "GitHub",
      "type": "version_control",
      "enabled": true,
      "apiKey": "${GITHUB_TOKEN}",
      "baseUrl": "https://api.github.com",
      "repository": "${GITHUB_REPOSITORY}",
      "branch": "main",
      "webhooks": {
        "deploy": "${GITHUB_DEPLOY_WEBHOOK}",
        "status": "${GITHUB_STATUS_WEBHOOK}"
      },
      "actions": {
        "enabled": true,
        "workflows": ["railway-deploy.yml", "neon-deploy.yml"],
        "autoDeploy": true
      }
    },
    "vercel": {
      "name": "Vercel",
      "type": "deployment",
      "enabled": false,
      "apiKey": "${VERCEL_API_KEY}",
      "projectId": "${VERCEL_PROJECT_ID}",
      "teamId": "${VERCEL_TEAM_ID}"
    }
  },
  "routing": {
    "defaultProvider": "google",
    "fallbackProvider": "openai",
    "queryTypeRouting": {
      "protocol_suggestion": ["anthropic", "openai", "google"],
      "diagnosis_help": ["openai", "anthropic", "google"],
      "exercise_recommendation": ["google", "openai", "anthropic"],
      "case_analysis": ["anthropic", "openai", "google"],
      "research_query": ["openai", "anthropic", "google"],
      "document_analysis": ["anthropic", "google", "openai"],
      "general_question": ["google", "openai", "anthropic"],
      "deploy_management": ["railway", "github"],
      "infrastructure_monitoring": ["railway"],
      "database_operations": [],
      "database_monitoring": [],
      "backup_restore": [],
      "environment_config": ["railway"],
      "performance_optimization": ["railway"],
      "security_audit": ["railway"],
      "cost_optimization": ["railway"]
    },
    "infrastructureRouting": {
      "railway": {
        "deploy": ["production", "staging"],
        "monitoring": ["metrics", "logs", "alerts", "health"],
        "environment": ["variables", "domains", "services", "resources"],
        "maintenance": ["updates", "rollbacks", "scaling"]
      }
    }
  },
  "cache": {
    "enabled": true,
    "ttl": {
      "protocol_suggestion": 3600,
      "diagnosis_help": 1800,
      "exercise_recommendation": 7200,
      "case_analysis": 1800,
      "research_query": 3600,
      "document_analysis": 7200,
      "general_question": 1800,
      "deploy_management": 300,
      "infrastructure_monitoring": 60,
      "database_operations": 600,
      "database_monitoring": 120,
      "backup_restore": 1800,
      "environment_config": 3600,
      "performance_optimization": 1800,
      "security_audit": 7200,
      "cost_optimization": 3600
    },
    "maxSize": 1000,
    "infrastructureCache": {
      "railway": {
        "deployStatus": 30,
        "metrics": 60,
        "logs": 300,
        "health": 60
      }
    }
  },
  "monitoring": {
    "enabled": true,
    "logLevel": "info",
    "metrics": {
      "enabled": true,
      "collectUsage": true,
      "collectLatency": true,
      "collectErrors": true,
      "collectPerformance": true
    },
    "alerts": {
      "enabled": true,
      "channels": ["email", "slack", "discord"],
      "thresholds": {
        "errorRate": 5,
        "responseTime": 2000,
        "cpuUsage": 80,
        "memoryUsage": 85
      }
    }
  },
  "security": {
    "validateApiKeys": true,
    "encryptCache": false,
    "rateLimitByUser": true,
    "maxRequestsPerUser": 100,
    "auditLog": true,
    "encryption": {
      "enabled": true,
      "algorithm": "AES-256-GCM",
      "keyRotation": "monthly"
    }
  },
  "authentication": {
    "railway": {
      "type": "bearer",
      "apiKey": "${RAILWAY_API_KEY}",
      "refreshToken": "${RAILWAY_REFRESH_TOKEN}",
      "tokenExpiry": 3600,
      "autoRefresh": true
    },
    "github": {
      "type": "bearer",
      "token": "${GITHUB_TOKEN}",
      "scopes": ["repo", "workflow", "admin:org"]
    }
  },
  "infrastructure": {
    "healthChecks": {
      "enabled": true,
      "interval": 300,
      "timeout": 10,
      "retries": 3,
      "endpoints": {
        "railway": "https://backboard.railway.app/health",
        "github": "https://api.github.com/zen"
      }
    },
    "failover": {
      "enabled": true,
      "strategy": "circuit_breaker",
      "thresholds": {
        "errorRate": 0.5,
        "responseTime": 5000,
        "consecutiveFailures": 5
      }
    },
    "logging": {
      "level": "info",
      "destinations": ["console", "file", "cloudwatch"],
      "format": "json",
      "rotation": {
        "enabled": true,
        "maxSize": "100MB",
        "maxFiles": 10
      }
    },
    "backup": {
      "enabled": true,
      "schedule": "0 2 * * *",
      "retention": "30d",
      "encryption": true,
      "compression": true
    }
  },
  "deployment": {
    "environments": ["development", "staging", "production"],
    "strategy": "blue-green",
    "rollback": {
      "enabled": true,
      "automatic": false,
      "threshold": 5
    },
    "notifications": {
      "slack": "${SLACK_WEBHOOK_URL}",
      "discord": "${DISCORD_WEBHOOK_URL}",
      "email": "${DEPLOYMENT_EMAIL}"
    }
  }
}
